import{e as n,y as m,c as E,a as w,G as L,bY as F,gX as O,gY as P}from"./index-Bv0Hohk0.js";import{s as I,v as _}from"./rasterProjectionHelper-C2k94LqZ.js";import{n as G}from"./LayerView3D-BHAdUlxy.js";import{c as j}from"./TiledLayerView3D-D6_3wV1r.js";import{j as A}from"./commonProperties-71l2LJ6s.js";import{p as k}from"./popupUtils-D-6l6-mq.js";import{u as M}from"./LayerView-xIua26SL.js";import{i as V}from"./RefreshableLayerView-ByEXgiMo.js";import{r as W}from"./drapedUtils-aoEEgHJS.js";const $=t=>{let e=class extends t{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return I(this.layer.serviceRasterInfo,this.view.spatialReference)}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){return _(this.layer.fullExtent,this.view.spatialReference,!0)}supportsSpatialReference(i){return!!I(this.layer.serviceRasterInfo,i)}async fetchPopupFeaturesAtLocation(i,a){const{layer:r}=this;if(!i)throw new w("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:r});const{popupEnabled:u}=r,h=k(r,a);if(!u||h==null)throw new w("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:u,popupTemplate:h});const l=[],{value:s,magdirValue:p,processedValue:o}=await r.identify(i,{timeExtent:this.timeExtent,signal:a==null?void 0:a.signal});let f="";if(s&&s.length){f=r.type==="imagery-tile"&&r.hasStandardTime()&&s[0]!=null?s.map(v=>r.getStandardTimeValue(v)).join(", "):s.join(", ");const y={ObjectId:0},R="Raster.ServicePixelValue";y[R]=r.type==="imagery-tile"&&r.raster.datasetFormat==="Function"?o==null?void 0:o.join(", "):f,y[R+".Raw"]=f;const T=r.serviceRasterInfo.attributeTable;if(T!=null){const{fields:v,features:z}=T,S=v.find(({name:d})=>d.toLowerCase()==="value"),b=S?z.find(d=>String(d.attributes[S.name])===f):null;if(b)for(const d in b.attributes)b.attributes.hasOwnProperty(d)&&(y[this._rasterFieldPrefix+d]=b.attributes[d])}const x=r.serviceRasterInfo.dataType;x!=="vector-magdir"&&x!=="vector-uv"||(y["Raster.Magnitude"]=p==null?void 0:p[0],y["Raster.Direction"]=p==null?void 0:p[1]);const g=new L(this.fullExtent.clone(),null,y);g.layer=r,g.sourceLayer=g.layer,l.push(g)}return l}};return n([m()],e.prototype,"layer",void 0),n([m(A)],e.prototype,"timeExtent",void 0),n([m()],e.prototype,"view",void 0),n([m()],e.prototype,"fullExtent",null),n([m()],e.prototype,"tileInfo",void 0),n([m({readOnly:!0})],e.prototype,"hasTilingEffects",null),n([m()],e.prototype,"datumTransformation",null),e=n([E("esri.views.layers.ImageryTileLayerView")],e),e};let c=class extends $(V(j(G(M)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this.isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage(),this.fullExtent==null&&this.addResolvingPromise(Promise.reject(new w("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const t=F(()=>{var e,i;return(i=(e=this.view)==null?void 0:e.basemapTerrain)==null?void 0:i.tilingSchemeLocked}).then(()=>{const e=this.view.basemapTerrain.tilingScheme,i=this.layer.tileInfo,a=["png","png24","png32","jpg","mixed"].includes(i.format)&&e.compatibleWith(i);this.isAlignedMapTile=a;const r=a?i:e.toTileInfo();this.tileInfo=r,this._updatingHandles.add(()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition,this.layer.multidimensionalSubset,this.layer.rasterFunction,this.timeExtent],()=>this.refresh())});this.addResolvingPromise(t)}destroy(){this.layer.decreaseRasterJobHandlerUsage(),this.view=null}get _blankTile(){const t=document.createElement("canvas"),e=t.getContext("2d"),[i,a]=this.tileInfo.size;return t.width=i,t.height=a,e.clearRect(0,0,i,a),e.getImageData(0,0,i,a)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){var a,r;const t=this.layer.tileInfo,e=(a=this.tileInfo.lodAt(0))==null?void 0:a.scale,i=(r=this.layer.tileInfo.lodAt(t.lods.length-1))==null?void 0:r.scale;return this.levelRangeFromScaleRange(e,i)}_getfullExtent(){var t;return I(this.layer.serviceRasterInfo,((t=this.view.basemapTerrain)==null?void 0:t.spatialReference)!=null?this.view.basemapTerrain.spatialReference:this.view.spatialReference)}async fetchTile(t,e,i,a){const r=this.tileInfo,u=this._canSymbolizeInWebGL(),h={tileInfo:r,requestRawData:u,signal:a.signal,timeExtent:this.timeExtent,requestAsImageElement:this.isAlignedMapTile,noClip:!1},{layer:l}=this,s=await l.fetchTile(t,e,i,h);if(s instanceof HTMLImageElement)return s;let p=s==null?void 0:s.pixelBlock;if(p==null)return this._blankTile;if(!u&&(p=await l.applyRenderer(s),p==null))return this._blankTile;const o=new O([t,e,i],p,r.size[0],r.size[1]);return u?(o.symbolizerRenderer=l.symbolizer.rendererJSON,o.symbolizerParameters=l.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(t)),o.transformGrid=s.transformGrid,o.bandIds=l.bandIds):(o.isRendereredSource=!0,o.bandIds=null),o.interpolation=l.interpolation,o}_getSymbolizerOptions(t){var i;const e=this.tileInfo.lodAt(t).resolution;return{pixelBlock:null,isGCS:((i=this.view.basemapTerrain)==null?void 0:i.spatialReference)!=null?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:e,y:e},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(t){this._canSymbolizeInWebGL()&&JSON.stringify(t.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(t.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(t.lij[0])))}createFetchPopupFeaturesQueryGeometry(t,e){return W(t,e,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){var u,h,l;const t=P(),{symbolizer:e}=this.layer,i=(h=(u=e.lookup)==null?void 0:u.colormapLut)==null?void 0:h.indexedColormap,a=!!((l=this.layer.rasterFunction)!=null&&l.hasClipFunction),r=i&&i.length>4*(t.maxTextureSize||4906);return e.canRenderInWebGL&&!r&&!a}};n([m({readOnly:!0})],c.prototype,"_blankTile",null),n([m({readOnly:!0})],c.prototype,"imageFormatIsOpaque",null),n([m({readOnly:!0})],c.prototype,"hasMixedImageFormats",null),n([m({readOnly:!0})],c.prototype,"dataLevelRange",null),c=n([E("esri.views.3d.layers.ImageryTileLayerView3D")],c);const Q=c;export{Q as default};
