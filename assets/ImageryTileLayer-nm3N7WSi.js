import{c0 as kt,pH as Ft,a_ as te,a$ as mt,q as ce,a as O,fh as We,ba as z,bd as A,U as dt,eV as pt,af as L,g9 as Ct,e as I,y as v,c as K,bp as Mt,_ as Ge,c2 as Qe,j as Pt,i as Ot,mN as $t,cA as Bt,aj as Dt,pI as Nt,es as yt,pJ as Et,cF as Je,E as Jt,fB as zt,fy as At,dl as Lt,eE as Ht,eG as Wt,eF as Gt,bF as jt,O as qt,d as Ut,bu as fe,A as Vt,eP as Xt,c7 as Yt,bI as Kt,l as Qt}from"./index-Bv0Hohk0.js";import{m as Zt}from"./MultiOriginJSONSupport-BZQTWpeF.js";import{l as ei}from"./ArcGISService-uQPwYVuT.js";import{e as ti}from"./CustomParametersMixin-DKqLR8tC.js";import{h as gt,D as xt,i as ii,a as si,p as je,c as ni,N as ze,l as ri,d as ai,b as oi,e as li,f as Ze,o as ci,g as et,K as tt,B as it,j as ui,S as hi,E as fi,V as st,t as mi,k as di,m as pi,n as yi}from"./ImageHistogramParameters-D7HQSzsL.js";import{d as wt,c as gi}from"./commonProperties-71l2LJ6s.js";import{U as Me,S as xi,n as xe,D as It,R as wi,a as Ii,l as bi,b as Ri,u as Y,f as Si,m as qe,s as vi,L as Ti,r as nt,c as we,d as _i,E as ki,W as Fi,h as Ci,g as Ue,P as Mi,T as Pi,e as Oi,F as $i,i as Bi,N as Di,j as Ni,k as Ie,B as Ei,o as Ji,p as zi}from"./dataUtils-tOrpKPXg.js";import{T as Ae,D as be,j as rt,r as at,o as Ai,V as Pe,J as Te,e as Li,Z as Hi,C as Wi,U as Le}from"./rasterProjectionHelper-C2k94LqZ.js";import{d as ke}from"./FeatureSet-DZOCMyA1.js";import{R as bt,f as Gi,i as ji,y as Ve,c as qi,N as Ui}from"./utils-D3i6CC6-.js";import{u as Vi}from"./OperationalLayer-CgleBBYh.js";import{j as Xi}from"./PortalLayer-DaNsTDLt.js";import{f as Yi}from"./TemporalLayer-C1KR7WBT.js";import{T as Ki}from"./TilemapCache-1A4vVhtU.js";import{p as Qi}from"./popupUtils-Cu5Z_JS9.js";import{A as Re}from"./interfaces-CL2NbQte.js";import"./UniqueValueRenderer-C8B84zcF.js";import"./diffUtils-D_LMLEpD.js";import"./ClassBreaksDefinition-BI_2pPxM.js";import"./portalItemUtils-JWUEQXnE.js";import"./TimeInfo-Cqort3EX.js";let Zi=class{constructor(e=15e3,n=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,n)}decreaseRefCount(e,n){const t=e+"/"+n,s=this._cachedBlocks;if(s.has(t)){const r=s.get(t);return r.refCount--,r.refCount<=0&&(s.delete(t),r.controller&&r.controller.abort()),r.refCount}return 0}getBlock(e,n){const t=e+"/"+n,s=this._cachedBlocks;if(s.has(t)){const r=s.get(t);return r.ts=Date.now(),r.refCount++,s.delete(t),s.set(t,r),r.block}return null}putBlock(e,n,t,s){const r=this._cachedBlocks,a=e+"/"+n;if(r.has(a)){const l=r.get(a);l.ts=Date.now(),l.refCount++}else r.set(a,{block:t,ts:Date.now(),refCount:1,controller:s});this._trim(),this._updateTimer()}deleteBlock(e,n){const t=this._cachedBlocks,s=e+"/"+n;t.has(s)&&t.delete(s)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const n=Array.from(e),t=Date.now();for(let s=0;s<n.length&&n[s][1].ts<=t-this._duration;s++)e.delete(n[s][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const n=Array.from(e);for(let t=0;t<n.length-this._size;t++)e.delete(n[t][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}};const Fe=new Map,se=new Zi;function ot(i,e){return e==null?i:`${i}?sliceId=${e}`}function es(i,e,n){var a,l;const t=Fe.get(i);if(!t)return e==null?se.decreaseRefCount(i,n):0;if(e==null||t[e]==null)return se.decreaseRefCount(i,n);const s=(a=t[e])==null?void 0:a.cache,r=s==null?void 0:s.get(n);if(s&&r){if(r.refCount--,r.refCount===0){s.delete(n);for(let o=0;o<t.length;o++)(l=t[o])==null||l.cache.delete(n);r.controller&&r.controller.abort()}return r.refCount}return 0}function lt(i,e,n){var r,a,l;const t=Fe.get(i);if(!t)return e==null?se.getBlock(i,n):null;if(e==null||t[e]==null){for(let o=0;o<t.length;o++){const c=(r=t[o])==null?void 0:r.cache.get(n);if(c)return c.refCount++,c.block}return se.getBlock(i,n)}const s=(a=t[e])==null?void 0:a.cache.get(n);if(s)return s.refCount++,s.block;for(let o=0;o<t.length;o++){if(o===e||!t[o])continue;const c=(l=t[o])==null?void 0:l.cache,u=c==null?void 0:c.get(n);if(c&&u)return u.refCount++,c.set(n,u),u.block}return null}function ct(i,e,n,t,s=null){var l;const r=Fe.get(i);if(!r)return void(e==null&&se.putBlock(i,n,t,s));if(e==null||r[e]==null)return void se.putBlock(i,n,t,s);const a={refCount:1,block:t,isResolved:!1,isRejected:!1,controller:s};t.then(()=>a.isResolved=!0).catch(()=>a.isRejected=!0),(l=r[e])==null||l.cache.set(n,a)}function ts(i,e,n){var s;const t=Fe.get(i);t?e!=null&&t[e]!=null?(s=t[e])==null||s.cache.delete(n):se.deleteBlock(i,n):e==null&&se.deleteBlock(i,n)}const ut=8,is=256;let ss=0,G=class extends kt(Mt){constructor(){super(...arguments),this._tileFetchQueue=new Ft({concurrency:32,process:(i,e)=>this._fetchRawTile(i.pyramidLevel,i.row,i.col,{...i.options,signal:e})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const i=Ae();this.addResolvingPromise(i),await this.when()}normalizeCtorArgs(i){return i!=null&&i.ioConfig&&(i={...i,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:te.create(),...i.ioConfig}}),i}get _isGlobalWrappableSource(){const{rasterInfo:i}=this,e=be(i.spatialReference);return e!=null&&i.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:i}=this.rasterInfo;return i==null||i.type==="gcs-shift"}set rasterJobHandler(i){var e,n;this._set("rasterJobHandler",i),this.datasetFormat==="Function"&&((n=(e=this.primaryRasters)==null?void 0:e.rasters)==null||n.forEach(t=>t.rasterJobHandler=i))}get rasterId(){return this.url||"rasterId-"+ss++}set url(i){this._set("url",mt(i,ce.getLogger(this)))}async open(i){throw new O("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(i,e,n,t={}){const s=t.tileInfo||this.rasterInfo.storageInfo.tileInfo,r=this.getTileExtentFromTileInfo(i,e,n,s);return t={noClip:!0,...t},this.fetchPixels(r,s.size[0],s.size[1],t)}async identify(i,e={}){var C;i=We(z,i).clone().normalize();const{multidimensionalDefinition:n,timeExtent:t}=e,{rasterInfo:s}=this,{hasMultidimensionalTranspose:r,multidimensionalInfo:a}=s;let{transposedVariableName:l}=e;const o=a!=null&&r&&(t!=null||gt(n));o&&!l&&(l=n!=null&&n.length>0?n[0].variableName??void 0:a.variables[0].name,e={...e,transposedVariableName:l}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:u}=s,{datumTransformation:h}=e;let m=rt(i,c,h);if(!u.intersects(m))return{location:m,value:null};if(s.transform!=null){const P=s.transform.inverseTransform(m);if(!s.nativeExtent.intersects(P))return{location:P,value:null};m=P}let f=0;const p=l!=null&&a!=null&&s.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const P=this.primaryRasters.rasters[0];if(p)return P.identify(m,e);const{pixelSize:N}=s,M=3,$=N.x*M/2,B=N.y*M/2,E=new A({xmin:m.x-$,xmax:m.x+$,ymin:m.y-B,ymax:m.y+B,spatialReference:c}),X={interpolation:"nearest",multidimensionalDefinition:n,sliceId:e.sliceId},{pixelBlock:H}=await P.fetchPixels(E,M,M,X),{pixelBlock:W}=await this.fetchPixels(E,M,M,X);if(H==null)return{location:m,value:null};const q=Math.floor(M*M*.5),ee=!H.mask||H.mask[q]?H.pixels.map(D=>D[q]):null;let U;return W!=null&&(U=!W.mask||W.mask[q]?W.pixels.map(D=>D[q]):void 0),{location:m,value:ee,processedValue:U,pyramidLevel:0}}if(!p){if(e.srcResolution)f=at(e.srcResolution,s,this.ioConfig.sampling).pyramidLevel;else if(f=await this.computeBestPyramidLevelForLocation(i,e),f==null)return{location:m,value:null}}const g=this.identifyPixelLocation(m,f,null,p);if(g===null)return{location:m,value:null};const{row:d,col:y,rowOffset:x,colOffset:w,blockWidth:R}=g,T=l??e.sliceId,b=ot(this.rasterId,T),_=`${f}/${d}/${y}`;let k=lt(b,null,_);k==null&&(k=this.fetchRawTile(f,d,y,e),ct(b,null,_,k));const S=await k;if(!((C=S==null?void 0:S.pixels)!=null&&C.length))return{location:m,value:null};const F=x*R+w;return this._processIdentifyResult(S,{srcLocation:m,position:F,pyramidLevel:f,useTransposedTile:!!p,requestSomeSlices:o,identifyOptions:e})}async fetchPixels(i,e,n,t={}){i=Ai(i),t=this._getRequestOptionsWithSliceId(t);const{_hasNoneOrGCSShiftTransform:s}=this;if(t.requestRawData&&s)return this._fetchPixels(i,e,n,t);const r=be(i.spatialReference),a=Pe(i);if(r==null||a===0||a===1&&this._isGlobalWrappableSource&&s)return this._fetchPixels(i,e,n,t);if(a>=3)return{extent:i,pixelBlock:null};const l=[],{xmin:o,xmax:c}=i,u=Math.round(r/(c-o)*e),h=u-Math.round((r/2-o)/(c-o)*e);let m=0;const f=[];for(let y=0;y<=a;y++){const x=new A({xmin:y===0?o:-r/2,xmax:y===a?c-r*y:r/2,ymin:i.ymin,ymax:i.ymax,spatialReference:i.spatialReference}),w=y===0?u-h:y===a?e-m:u;m+=w,f.push(w);const R=t.disableWrapAround&&y>0?null:this._fetchPixels(x,w,n,t);l.push(R)}const p=(await Promise.all(l)).map(y=>y==null?void 0:y.pixelBlock);let g=null;const d={width:e,height:n};return this.rasterJobHandler?g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:d,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:f},t)).pixelBlock:g=Me(p,d,{blockWidths:f}),{extent:i,srcExtent:Te(i,this.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:g}}async fetchRawPixels(i,e,n,t={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const s=await this._fetchRawTiles(i,e,n,t),{nativeExtent:r,nativePixelSize:a,storageInfo:l}=this.rasterInfo,o=2**i,c=a.x*o,u=a.y*o,h=new A({xmin:r.xmin+c*e.x,xmax:r.xmin+c*(e.x+n.width-1),ymin:r.ymax-u*(e.y+n.height-1),ymax:r.ymax-u*e.y,spatialReference:r.spatialReference});if(!s)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:m,mosaicSize:f}=s;if(m.length===1&&m[0]!=null&&m[0].width===n.width&&m[0].height===n.height)return{extent:h,srcExtent:h,pixelBlock:s.pixelBlocks[0]};const p=i>0?l.pyramidBlockWidth:l.blockWidth,g=i>0?l.pyramidBlockHeight:l.blockHeight,d={x:e.x%p,y:e.y%g};let y;return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:f,destDimension:n,clipOffset:d,clipSize:n,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:y=Me(m,f,{clipOffset:d,clipSize:n}),{extent:h,srcExtent:h,pixelBlock:y}}fetchRawTile(i,e,n,t){throw new O("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(i){return Te(this.rasterInfo.extent,i)}decodePixelBlock(i,e){return!this.rasterJobHandler||e.useCanvas?xi(i,e):this.rasterJobHandler.decode({data:i,options:e})}async request(i,e,n=0){const{customFetchParameters:t}=this.ioConfig,{range:s,query:r,headers:a}=e;n=n??e.retryCount??this.ioConfig.retryCount;const l=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await dt(i,{...e,query:{...r,...t},headers:{...a,...l}})}catch(o){if(n>0)return n--,this.request(i,e,n);throw o}}getSliceIndex(i){const{multidimensionalInfo:e}=this.rasterInfo;return e==null||i==null||i.length===0?null:xt(i,e)}getTileExtentFromTileInfo(i,e,n,t){const s=t.lodAt(i);return this.getTileExtent({x:s.resolution,y:s.resolution},e,n,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:i,spatialReference:e,extent:n,pixelSize:t}=this.rasterInfo;if(!i.tileInfo){const s=[],r=i.maximumPyramidLevel||0;let a=Math.max(t.x,t.y),l=1/.0254*96*a;for(let c=0;c<=r;c++)s.unshift(new pt({level:r-c,resolution:a,scale:l})),a*=2,l*=2;const o=new z({x:n.xmin,y:n.ymax,spatialReference:e});i.tileInfo=new te({origin:o,size:[i.blockWidth,i.blockHeight],spatialReference:e,lods:s}),i.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(i,e=512,n=512,t){const{width:s,height:r,nativeExtent:a,pixelSize:l,spatialReference:o}=i,c=new z({x:a.xmin,y:a.ymax,spatialReference:o});t==null&&(t=Math.max(0,Math.round(Math.log(Math.max(s,r))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[l],t);i.storageInfo=new xe({blockWidth:e,blockHeight:n,pyramidBlockWidth:e,pyramidBlockHeight:n,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:u})}async computeBestPyramidLevelForLocation(i,e={}){return 0}computeBlockBoundary(i,e,n,t,s,r=0,a=2){if(s.length===1&&r>0){s=[...s];let{x:u,y:h}=s[0];for(let m=0;m<r;m++)u*=a,h*=a,s.push({x:u,y:h})}const l=[],{x:o,y:c}=t;for(let u=0;u<s.length;u++){const{x:h,y:m}=s[u];l.push({minCol:Math.floor((i.xmin-o+.1*h)/e/h),maxCol:Math.floor((i.xmax-o-.1*h)/e/h),minRow:Math.floor((c-i.ymax+.1*m)/n/m),maxRow:Math.floor((c-i.ymin-.1*m)/n/m)})}return l}getPyramidPixelSize(i){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:n,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(i===0)return e;if(n!=null&&n.length)return n[i-1];const s=t**i;return{x:e.x*s,y:e.y*s}}identifyPixelLocation(i,e,n,t){const{spatialReference:s,nativeExtent:r,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:l,origin:o,transposeInfo:c}=a,u=t&&c!=null?c.tileSize[0]:a.blockWidth,h=t&&c!=null?c.tileSize[1]:a.blockHeight,m=rt(i,s,n);if(!r.intersects(m)||e<0||e>l)return null;const f=this.getPyramidPixelSize(e),{x:p,y:g}=f,d=(o.y-m.y)/g/h,y=(m.x-o.x)/p/u,x=Math.min(h-1,Math.floor((d-Math.floor(d))*h)),w=Math.min(u-1,Math.floor((y-Math.floor(y))*u));return{pyramidLevel:e,row:Math.floor(d),col:Math.floor(y),rowOffset:x,colOffset:w,blockWidth:u,srcLocation:m}}getTileExtent(i,e,n,t,s,r){const[a,l]=r,o=t.x+n*a*i.x,c=o+a*i.x,u=t.y-e*l*i.y,h=u-l*i.y;return new A({xmin:o,xmax:c,ymin:h,ymax:u,spatialReference:s})}getBlockWidthHeight(i){return{blockWidth:i>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:i>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(i,e,n){const t=this.rasterInfo.storageInfo.blockBoundary[i];return!t||t.maxRow<e||t.maxCol<n||t.minRow>e||t.minCol>n}updateImageSpaceRasterInfo(i){const{extent:e,pixelSize:n}=i;if(e.xmin===-.5&&e.ymax===.5&&n.x===1&&n.y===1&&i.transform==null)return;const{width:t,height:s}=i,r=L.WebMercator;i.spatialReference=r,i.extent=i.nativeExtent=new A({xmin:-.5,ymax:.5,xmax:t-.5,ymin:.5-s,spatialReference:r}),i.isPseudoSpatialReference=!0,i.transform=null,i.pixelSize=new z({x:1,y:1,spatialReference:r});const{extent:a,storageInfo:l}=i;if(l){l.origin=new z({x:a.xmin,y:a.ymax,spatialReference:r});const{tileInfo:o}=l;if(o){o.origin=l.origin;const c=(i.nativePixelSize.x+i.nativePixelSize.y)/2;o.lods.forEach((u,h)=>{u.resolution=c*2**h,u.scale=96*u.resolution/.0254})}}}async _fetchPixels(i,e,n,t={}){let s=Pe(i);if(s>=2)return{extent:i,pixelBlock:null};const r=this._getSourceDataInfo(i,e,n,t),{pyramidLevel:a,srcResolution:l,srcExtent:o,srcWidth:c,srcHeight:u,ul:h}=r;if(c===0||u===0)return{extent:i,srcExtent:o,pixelBlock:null};const{rasterInfo:m}=this,f=m.transform,p=(f==null?void 0:f.type)==="gcs-shift",g=be(i.spatialReference)!=null;!p&&g||(s=Pe(r.srcExtent,p));const d=await this._fetchRawTiles(a,h,{width:c,height:u,wrapCount:s},t);if(!d)return{extent:i,srcExtent:o,pixelBlock:null};const y=m.storageInfo,x=a>0?y.pyramidBlockWidth:y.blockWidth,w=a>0?y.pyramidBlockHeight:y.blockHeight;let{x:R,y:T}=m.pixelSize;if(a>0){const{pyramidResolutions:D,pyramidScalingFactor:_t}=y;if(D!=null&&D[a-1])({x:R,y:T}=D[a-1]);else{const Ke=_t**a;R*=Ke,T*=Ke}}const b=m.spatialReference,_=new z({x:R,y:T,spatialReference:b}),k=x===c&&w===u&&h.x%x==0&&h.y%w==0,S=new z({x:(i.xmax-i.xmin)/e,y:(i.ymax-i.ymin)/n,spatialReference:i.spatialReference}),F=!i.spatialReference.equals(b),C=b.isGeographic?1e-9:1e-4,{datumTransformation:P}=t;if(!F&&k&&d.pixelBlocks.length===1&&x===e&&w===n&&this._isSameResolution(l,S,C))return{extent:i,srcExtent:o,srcTilePixelSize:_,pixelBlock:d.pixelBlocks[0]};const N=g&&be(o.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,M=t.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");M&&!this.rasterJobHandler&&await Ae();const $=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:i,srcBufferExtent:d.extent,pixelSize:S.toJSON(),datumTransformation:P,rasterTransform:f,hasWrapAround:s>0||N,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:M},t):Li({projectedExtent:i,srcBufferExtent:d.extent,pixelSize:S,datumTransformation:P,rasterTransform:f,hasWrapAround:s>0||N,isAdaptive:!1,includeGCSGrid:M});let B;const E=!t.requestRawData,X={rows:$.spacing[0],cols:$.spacing[1]},H=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(a,d.extent.xmin):void 0,{pixelBlocks:W,mosaicSize:q,isPartiallyFilled:ee}=d;let U=null;if(this.rasterJobHandler)({pixelBlock:B,localNorthDirections:U}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:W,srcMosaicSize:q,destDimension:E?{width:e,height:n}:null,coefs:E?$.coefficients:null,sampleSpacing:E?X:null,projectDirections:M,gcsGrid:M?$.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:t.interpolation,alignmentInfo:H,blockWidths:null},t));else{const D=Me(W,q,{alignmentInfo:H});B=E?It(D,{width:e,height:n},$.coefficients,X,t.interpolation):D,M&&$.gcsGrid&&(U=wi({width:e,height:n},$.gcsGrid),B=Ii(B,this.rasterInfo.dataType,U))}return t.requestRawData||M?{extent:i,srcExtent:o,srcTilePixelSize:_,pixelBlock:B,transformGrid:$,localNorthDirections:U,isPartiallyFilled:ee}:{extent:i,srcExtent:o,srcTilePixelSize:_,pixelBlock:B}}async _fetchRawTiles(i,e,n,t){const{origin:s,blockBoundary:r}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(i);let{x:o,y:c}=e,{width:u,height:h,wrapCount:m}=n;const f=this._getRasterTileAlignmentInfo(i,0);t.buffer&&(o-=t.buffer.cols,c-=t.buffer.rows,u+=2*t.buffer.cols,h+=2*t.buffer.rows);let p=0,g=0,d=0;m&&f!=null&&({worldColumnCountFromOrigin:g,originColumnOffset:d,rightPadding:p}=f,g*f.blockWidth-p>=o+u&&(p=0));const y=Math.floor(o/a),x=Math.floor(c/l),w=Math.floor((o+u+p-1)/a),R=Math.floor((c+h+p-1)/l),T=r[i];if(!T)return null;const{minRow:b,minCol:_,maxCol:k,maxRow:S}=T;if(m===0&&(R<b||w<_||x>S||y>k))return null;const F=new Array;let C=!1;const P=this.ioConfig.allowPartialFill==null?t.allowPartialFill:this.ioConfig.allowPartialFill;for(let H=x;H<=R;H++)for(let W=y;W<=w;W++){let q=W;if(!t.disableWrapAround&&m&&f!=null&&g<=W&&(q=W-g-d),H>=b&&q>=_&&S>=H&&k>=q){const ee=this._tileFetchQueue.push({pyramidLevel:i,row:H,col:q,options:t},{signal:t.signal});P?F.push(new Promise(U=>{ee.then(D=>U(D)).catch(()=>{C=!0,U(null)})})):F.push(ee)}else F.push(Promise.resolve(null))}if(F.length===0)return null;const N=await Promise.all(F),M={height:(R-x+1)*l,width:(w-y+1)*a},{spatialReference:$}=this.rasterInfo,B=this.getPyramidPixelSize(i),{x:E,y:X}=B;return{extent:new A({xmin:s.x+y*a*E,xmax:s.x+(w+1)*a*E,ymin:s.y-(R+1)*l*X,ymax:s.y-x*l*X,spatialReference:$}),pixelBlocks:N,mosaicSize:M,isPartiallyFilled:C}}_isSameResolution(i,e,n){return Math.abs(i.x-e.x)<n&&Math.abs(i.y-e.y)<n}_fetchRawTile(i,e,n,t){const s=this.rasterInfo.storageInfo.blockBoundary[i];if(!s)return Promise.resolve(null);const{minRow:r,minCol:a,maxCol:l,maxRow:o}=s;if(e<r||n<a||e>o||n>l)return Promise.resolve(null);const c=ot(this.rasterId,t.sliceId),u=`${i}/${e}/${n}`;let h=lt(c,t.registryId,u);if(h==null){const m=new AbortController;h=this.fetchRawTile(i,e,n,{...t,signal:m.signal}),ct(c,t.registryId,u,h,m),h.catch(()=>ts(c,t.registryId,u))}return t.signal&&Ct(t,()=>{es(c,t.registryId,u)}),h}_computeMagDirValues(i){var o;const{bandCount:e,dataType:n}=this.rasterInfo;if(!(e===2&&n==="vector-magdir"||n==="vector-uv")||(i==null?void 0:i.length)!==2||!((o=i[0])!=null&&o.length))return null;const t=i[0].length;if(n==="vector-magdir"){const c=i[1].map(u=>(u+360)%360);return[i[0],c]}const[s,r]=i,a=[],l=[];for(let c=0;c<t;c++){const[u,h]=bi([s[c],r[c]]);a.push(u),l.push(h)}return[a,l]}_getRasterTileAlignmentInfo(i,e){return this._rasterTileAlignmentInfo==null&&(this._rasterTileAlignmentInfo=Hi(this.rasterInfo)),this._rasterTileAlignmentInfo.pyramidsInfo==null?null:{startX:e,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[i]}}_getSourceDataInfo(i,e,n,t={}){const s={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};t.srcResolution&&(s.srcResolution=t.srcResolution,this._updateSourceDataInfo(i,s));const r=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:l,pyramidLevel:o}=s,c=a/e,u=l/n,h=o<r&&c*u>=16,m=o===r&&this._requireTooManySrcTiles(a,l,e,n);if(h||m||a===0||l===0){const f=new z({x:(i.xmax-i.xmin)/e,y:(i.ymax-i.ymin)/n,spatialReference:i.spatialReference});let p=Wi(f,this.rasterInfo.spatialReference,i,s.datumTransformation);const g=!p||t.srcResolution&&p.x+p.y<t.srcResolution.x+t.srcResolution.y;if(h&&t.srcResolution&&g){const d=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(r-o+3>=d){const y=2**d;p={x:t.srcResolution.x*y,y:t.srcResolution.y*y}}}p&&(s.srcResolution=p,this._updateSourceDataInfo(i,s))}return this._requireTooManySrcTiles(s.srcWidth,s.srcHeight,e,n)&&(s.srcWidth=0,s.srcHeight=0),s}_requireTooManySrcTiles(i,e,n,t){const{tileInfo:s}=this.rasterInfo.storageInfo,r=Math.ceil(i/s.size[0])*Math.ceil(e/s.size[1]),a=i/n,l=e/t,o=Math.max(1,(n+t)/1024);return r>=is*o||a>ut||l>ut}_updateSourceDataInfo(i,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:n}=this,t=n.spatialReference,{srcResolution:s,datumTransformation:r}=e,{pyramidLevel:a,pyramidResolution:l,excessiveReading:o}=at(s,n,this.ioConfig.sampling);if(o)return;let c=e.srcExtent||Te(i,t,r);if(c==null)return;const u=n.transform;u&&(c=u.inverseTransform(c)),e.srcExtent=c;const{x:h,y:m}=n.storageInfo.origin,f=Math.floor((c.xmin-h)/l.x+.1),p=Math.floor((m-c.ymax)/l.y+.1),g=Math.floor((c.xmax-h)/l.x-.1),d=Math.floor((m-c.ymin)/l.y-.1),y=c.width<.1*l.x?0:g-f+1,x=c.height<.1*l.y?0:d-p+1;e.pyramidLevel=a,e.pyramidResolution=l,e.srcWidth=y,e.srcHeight=x,e.ul={x:f,y:p}}_getRequestOptionsWithSliceId(i){return this.rasterInfo.multidimensionalInfo!=null&&i.sliceId==null&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)}),i}_processIdentifyResult(i,e){const{srcLocation:n,position:t,pyramidLevel:s,useTransposedTile:r}=e,a=i.pixels[0].length/i.width/i.height;if(!(!i.mask||i.mask[t]))return{location:n,value:null};const{multidimensionalInfo:l}=this.rasterInfo;if(l==null||!r){const d=i.pixels.map(w=>w[t]),y={location:n,value:d,pyramidLevel:s},x=this._computeMagDirValues(d.map(w=>[w]));return x!=null&&x.length&&(y.magdirValue=x.map(w=>w[0])),y}let o=i.pixels.map(d=>d.slice(t*a,t*a+a)),c=this._computeMagDirValues(o);const{requestSomeSlices:u,identifyOptions:h}=e;let m=ii(l,h.transposedVariableName);if(u){const d=si(m,h.multidimensionalDefinition,h.timeExtent);o=o.map(y=>d.map(x=>y[x])),c=c==null?void 0:c.map(y=>d.map(x=>y[x])),m=d.map(y=>m[y])}const f=i.noDataValues||this.rasterInfo.noDataValue,p={pixels:o,pixelType:i.pixelType};let g;return f!=null&&(Ri(p,f),g=p.mask),{location:n,value:null,dataSeries:m.map((d,y)=>{const x={value:(g==null?void 0:g[y])===0?null:o.map(w=>w[y]),multidimensionalDefinition:d.multidimensionalDefinition.map(w=>new je({...w,isSlice:!0}))};return c!=null&&c.length&&(x.magdirValue=[c[0][y],c[1][y]]),x}),pyramidLevel:s}}};I([v()],G.prototype,"_rasterTileAlignmentInfo",void 0),I([v()],G.prototype,"_tileFetchQueue",void 0),I([v({readOnly:!0})],G.prototype,"_isGlobalWrappableSource",null),I([v({readOnly:!0})],G.prototype,"_hasNoneOrGCSShiftTransform",null),I([v()],G.prototype,"rasterJobHandler",null),I([v({readOnly:!0})],G.prototype,"rasterId",null),I([v(wt)],G.prototype,"url",null),I([v({type:String,json:{write:!0}})],G.prototype,"datasetName",void 0),I([v({type:String,json:{write:!0}})],G.prototype,"datasetFormat",void 0),I([v()],G.prototype,"hasUniqueSourceStorageInfo",void 0),I([v()],G.prototype,"rasterInfo",void 0),I([v()],G.prototype,"ioConfig",void 0),I([v()],G.prototype,"sourceJSON",void 0),G=I([K("esri.layers.support.rasterDatasets.BaseRaster")],G);const ne=G;function ns(i,e){if(i.spatialReference.equals(e))return i;const n=Qe(i.spatialReference),t=Qe(e);if(n===t)return i;const s=n/t;return{x:i.x*s,y:i.y*s}}async function He(i,e,n){if(n.type==="extent")return as(i,e,n);const{width:t,height:s}=i,r=new Uint8Array(t*s),{contains:a,intersects:l}=await Ge(()=>import("./geometryEngine-DM06toa8.js"),__vite__mapDeps([0,1,2,3,4]));return l(e,n)?n.type==="polyline"?os(i,e,n):a(n,e)?i:rs(i,e,n):new Y({pixelType:i.pixelType,width:t,height:s,mask:r,maskIsAlpha:!1,pixels:[...i.pixels]})}function rs(i,e,n){if(!i)return i;const{width:t,height:s}=i,r=e.width/t,a=e.height/s,{xmin:l,ymax:o}=e;let c;if(n.type==="extent"){const d=(n.xmin-l)/r,y=(n.xmax-l)/r,x=(o-n.ymax)/a,w=(o-n.ymin)/a;c=[[[d,x],[d,w],[y,w],[y,x],[d,x]]]}else c=n.rings.map(d=>d.map(([y,x])=>[(y-l)/r,(o-x)/a]));const u=document.createElement("canvas");u.width=t,u.height=s;const h=u.getContext("2d");h.fillStyle="#f00",h.beginPath(),c.forEach(d=>{h.moveTo(d[0][0],d[0][1]);for(let y=0;y<d.length;y++)h.lineTo(d[y][0],d[y][1]);h.closePath()}),h.fill();const m=h.getImageData(0,0,t,s).data,f=i.mask,p=t*s,g=new Uint8Array(p);for(let d=0;d<p;d++)f&&!f[d]||(g[d]=m[4*d+3]>127?255:0);return new Y({pixelType:i.pixelType,width:t,height:s,mask:g,maskIsAlpha:!1,pixels:[...i.pixels]})}function as(i,e,n){const{width:t,height:s}=i,r=new Uint8Array(t*s),a=e.width/t,l=e.height/s;if(n.width/a<.5||n.height/l<.5)return new Y({pixelType:i.pixelType,width:t,height:s,mask:r,pixels:[...i.pixels]});const{xmin:o,xmax:c,ymin:u,ymax:h}=e,{xmin:m,xmax:f,ymin:p,ymax:g}=n,d=Math.max(o,m),y=Math.min(c,f),x=Math.max(u,p),w=Math.min(h,g),R=.5*a,T=.5*l;if(y-d<R||w-x<T||y<o+R||d>c-R||x>h-T||w<u+T)return new Y({pixelType:i.pixelType,width:t,height:s,mask:r,pixels:[...i.pixels]});const b=Math.max(0,(d-o)/a),_=Math.min(t,Math.max(0,(y-o)/a)),k=Math.max(0,(h-w)/l),S=Math.min(s,Math.max(0,(h-x)/l)),F=Math.round(b),C=Math.round(_)-1,P=Math.round(k),N=Math.round(S)-1;if(F===C&&b%1>.5&&_%1<.5||P===N&&k%1>.5&&S%1<.5)return new Y({pixelType:i.pixelType,width:t,height:s,mask:r,pixels:[...i.pixels]});if(F===0&&P===0&&C===t&&N===s)return i;const M=i.mask;for(let $=P;$<=N;$++)for(let B=F;B<=C;B++){const E=$*t+B;r[E]=M?M[E]:255}return new Y({pixelType:i.pixelType,width:t,height:s,mask:r,pixels:[...i.pixels]})}function os(i,e,n){const{width:t,height:s}=i,r=new Uint8Array(t*s),a=e.width/t,l=e.height/s,{xmin:o,ymax:c}=e,{paths:u}=n,h=i.mask;for(let m=0;m<u.length;m++){const f=u[m];for(let p=0;p<f.length-1;p++){const[g,d]=f[p],[y,x]=f[p+1];let w=Math.floor((c-d)/l),R=Math.floor((c-x)/l);if(R<w){const b=w;w=R,R=b}w=Math.max(0,w),R=Math.min(s-1,R);const T=(y-g)/(x-d);for(let b=w;b<=R;b++){const _=b===w?Math.max(d,x):(s+1-b)*l,k=b===R?Math.min(d,x):_-l;let S=Math.floor(x===d?(g-o)/a:(T*(_-d)+g-o)/a),F=Math.floor(x===d?(y-o)/a:(T*(k-d)+g-o)/a);if(F<S){const P=S;S=F,F=P}const C=b*t;S=Math.max(0,S),F=Math.min(t-1,F);for(let P=C+S;P<=C+F;P++)r[P]=h?h[P]:255}}}return new Y({pixelType:i.pixelType,width:t,height:s,mask:r,pixels:[...i.pixels]})}function ls(i,e,n,t=!0){const{spatialReference:s}=i,{x:r,y:a}=ns(n,s);let l,o,c;const u=e.type==="extent"?e:e.extent;let{xmin:h,xmax:m,ymax:f,ymin:p}=u;const{xmin:g,ymax:d}=i.extent;return t?(h=g+(h>g?r*Math.round((h-g)/r):0),f=d-(f<d?a*Math.round((d-f)/a):0),m=g+(m>g?r*Math.round((m-g)/r):0),p=d-(p<d?a*Math.round((d-p)/a):0),l=new A({xmin:h,ymax:f,xmax:m,ymin:p,spatialReference:s}),o=Math.round(l.width/r),c=Math.round(l.height/a)):(o=Math.floor((m-h)/r+.8),c=Math.floor((f-p)/a+.8),h=g+(h>g?r*Math.floor((h-g)/r+.1):0),f=d-(f<d?a*Math.floor((d-f)/a+.1):0),m=h+o*r,p=f-c*a,l=new A({xmin:h,ymax:f,xmax:m,ymin:p,spatialReference:s})),{extent:l,width:o,height:c}}const cs=40;let re=class extends ne{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}async open(e){var u,h,m,f;await this.init();const{rasterFunction:n}=this;(h=(u=this.primaryRasters)==null?void 0:u.rasters)!=null&&h.length?n.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=n.getPrimaryRasters(),this.rasterJobHandler&&((m=this.primaryRasters.rasters)==null||m.forEach(p=>p.rasterJobHandler=this.rasterJobHandler)));const{rasters:t,rasterIds:s}=this.primaryRasters,r=t.map(p=>p.rasterInfo?void 0:p.open(e));await Promise.all(r);const a=t.map(({rasterInfo:p})=>p),l=n.bind({rasterInfos:a,rasterIds:s});if(n.rawSourceRasterInfos=a,!l.success||a.length===0)throw new O("raster-function:open",`cannot bind the function: ${l.error??""}`);const o=n.functionName==="Table"?n:(f=n.functionArguments)==null?void 0:f.raster;(o==null?void 0:o.functionName)==="Table"&&(n.rasterInfo.attributeTable=ke.fromJSON(o.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const c=a[0];this.hasUniqueSourceStorageInfo=a.length===1||a.slice(1).every(p=>this._hasSameStorageInfo(p,c)),this.set("sourceJSON",t[0].sourceJSON),this.set("rasterInfo",n.rasterInfo),await this._updateClipGeometry()}async syncJobHandler(){var e;return(e=this.rasterJobHandler)==null?void 0:e.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,n,t,s={}){var R,T;const{rasters:r,rasterIds:a}=this.primaryRasters;let l=!1;const{interpolation:o}=s,c=(R=this.rasterFunction.flatWebGLFunctionChain)==null?void 0:R.hasFocalFunction;!s.requestRawData&&c&&(l=r.length===1&&!s.skipRasterFunction,s={...s,interpolation:"bilinear",requestRawData:l});const u=r.map(b=>b.fetchPixels(e,n,t,s)),h=await Promise.all(u),m=h.map(b=>b.pixelBlock),f=l||s.requestRawData?h.map(b=>b.srcTilePixelSize):null;if(s.skipRasterFunction||m.every(b=>b==null))return h[0];const p=((T=h.find(b=>b.pixelBlock!=null))==null?void 0:T.extent)??e;let g=this.rasterJobHandler?await this.rasterJobHandler.process({extent:p,primaryPixelBlocks:m,primaryPixelSizes:f,primaryRasterIds:a}):this.rasterFunction.process({extent:p,primaryPixelBlocks:m,primaryPixelSizes:f,primaryRasterIds:a});const{transformGrid:d}=h[0];if(!l||g==null||d==null){const b=s.noClip?null:this.getClippingGeometry(p.spatialReference);return s.noClip||s.requestRawData||g==null||!b||(g=await He(g,p,b)),{...h[0],pixelBlock:g}}const y={rows:d.spacing[0],cols:d.spacing[1]};let x;this.rasterJobHandler?x=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[g],srcMosaicSize:{width:g.width,height:g.height},destDimension:{width:n,height:t},coefs:d.coefficients,sampleSpacing:y,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:o,alignmentInfo:void 0,blockWidths:null},s)).pixelBlock:x=It(g,{width:n,height:t},d.coefficients,y,o);const w=s.noClip?null:this.getClippingGeometry(e.spatialReference);return s.noClip||s.requestRawData||x==null||w==null||(x=await He(x,e,w)),{extent:e,srcExtent:h[0].srcExtent,pixelBlock:x}}getClippingGeometry(e){const n=this._clippingGeometry.get("0");if(!e||!n)return n;const t=this._getSRKey(e);let s=this._clippingGeometry.get(t);return s!=null||(s=e.equals(n.spatialReference)?n:Le(n,e),this._clippingGeometry.set(t,s)),s}_hasSameStorageInfo(e,n){const{storageInfo:t,pixelSize:s,spatialReference:r,extent:a}=e,{storageInfo:l,pixelSize:o,spatialReference:c,extent:u}=n;return s.x===o.x&&s.y===o.y&&r.equals(c)&&a.equals(u)&&t.blockHeight===l.blockHeight&&t.blockWidth===l.blockWidth&&t.maximumPyramidLevel===l.maximumPyramidLevel}async _updateClipGeometry(){const e=this.rasterFunction.getClippingGeometries()[0];let n=e==null?void 0:e.clippingGeometry;if(n&&e.clippingType==="inside"){const{extent:t}=this.rasterInfo,{difference:s,densify:r}=await Ge(()=>import("./geometryEngine-DM06toa8.js"),__vite__mapDeps([0,1,2,3,4]));let a=r(Pt.fromExtent(t),2*(t.width+t.height)/cs);a=Le(a,n.spatialReference),n=s(a,n)}this._clippingGeometry.clear(),n&&this._clippingGeometry.set("0",n)}_getSRKey(e){return String(e.wkid??e.wkt??e.wkt2)}};I([v({type:String,json:{write:!0}})],re.prototype,"datasetFormat",void 0),I([v()],re.prototype,"tileType",void 0),I([v()],re.prototype,"rasterFunction",void 0),I([v()],re.prototype,"primaryRasters",void 0),re=I([K("esri.layers.support.rasterDatasets.FunctionRaster")],re);const Rt=re,us=i=>{let e=class extends i{constructor(...t){var s,r;super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=((r=(s=t[0])==null?void 0:s.raster)==null?void 0:r.datasetFormat)==="Function"}get fullExtent(){var t;return(t=this.serviceRasterInfo)==null?void 0:t.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){var s;((s=t==null?void 0:t.functionName)==null?void 0:s.toLowerCase())==="none"&&(t=void 0),this._set("rasterFunction",t),this.updateRasterFunction()}get rasterInfo(){return $t(ce.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(t){this._set("url",mt(t,ce.getLogger(this)))}set renderer(t){t==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("renderer",t),this.updateRenderer())}readRenderer(t,s,r){var l,o;const a=(o=(l=s==null?void 0:s.layerDefinition)==null?void 0:l.drawingInfo)==null?void 0:o.renderer;return oi(a,r)||void 0}async convertVectorFieldData(t,s){const{serviceRasterInfo:r}=this;if(t==null||!r)return null;const a=this._rasterJobHandler.instance,l=r.dataType;return a?a.convertVectorFieldData({pixelBlock:t,dataType:l},s):Si(t,l)}async computeStatisticsHistograms(t,s){t=We(li,t).clone();const{serviceRasterInfo:r}=this,{geometry:a}=t;if(a==null)throw new O("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let l=a;const{spatialReference:o}=r;a.spatialReference.equals(o)||(await Ae(),l=a.type==="extent"?Te(a,o):Le(a,o));const c=t.pixelSize??new z({x:r.pixelSize.x,y:r.pixelSize.y,spatialReference:o}),{extent:u,width:h,height:m}=ls(r,l,c),f=await this.fetchPixels(u,h,m,{...s,interpolation:"nearest"});if(f.pixelBlock==null)throw new O("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const p=await He(f.pixelBlock,u,l),g=this._rasterJobHandler.instance;return g?g.computeStatisticsHistograms({pixelBlock:p},s):qe(p)}async createFlowMesh(t,s){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(t,s):vi(t.meshType,t.simulationSettings,t.flowData,s.signal!=null?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(t){var l,o;const{multidimensionalInfo:s}=this.serviceRasterInfo??{};if(s==null)return t;let r=t.multidimensionalDefinition||this.multidimensionalDefinition;r!=null&&r.length||(r=Ze(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const a=t.timeExtent||this.timeExtent;if(r!=null&&a!=null&&(a.start!=null||a.end!=null)){r=r.map(y=>y.clone());const c=(o=(l=s.variables.find(({name:y})=>y===r[0].variableName))==null?void 0:l.dimensions)==null?void 0:o.find(({name:y})=>y==="StdTime"),u=r.find(({dimensionName:y})=>y==="StdTime");if(!c||!u)return{...t,multidimensionalDefinition:null};const{start:h,end:m}=a,f=h==null?null:h.getTime(),p=m==null?null:m.getTime(),g=f??p,d=p??f;if(c.values!=null){const y=c.values.filter(x=>{if(Array.isArray(x)){if(g===d)return x[0]<=g&&x[1]>=g;const w=x[0]<=g&&x[1]>g||x[0]<d&&x[1]>=d,R=x[0]>=g&&x[1]<=d||x[0]<g&&x[1]>d;return w||R}return g===d?x===g:x>=g&&x<=d});if(y.length){const x=y.sort((w,R)=>{const T=Array.isArray(w)?w[0]:w,b=Array.isArray(w)?w[1]:w,_=Array.isArray(R)?R[0]:R,k=Array.isArray(R)?R[1]:R;return g===d?T-_:Math.abs(b-d)-Math.abs(k-d)})[0];u.values=[x]}else r=null}else if(c.hasRegularIntervals&&c.extent){const[y,x]=c.extent;g>x||d<y?r=null:u.values=g===d?[g]:[Math.max(y,g),Math.min(x,d)]}}return r!=null&&ci(r,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:r}}async updateRasterFunction(){var u,h,m;if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const f=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&f&&this._set("rasterFunction",ze.fromJSON(f)),void(this._cachedRasterFunctionJson=(u=this.rasterFunction)==null?void 0:u.toJSON())}let t,s=this.raster,r=!1;s.datasetFormat==="Function"?(t=s.primaryRasters.rasters,s=t[0],r=!0):t=[s];const{rasterFunction:a}=this;if(a){const f={raster:s};t.length>1&&t.forEach(d=>f[d.url]=d);const p=bt(((h=a.functionDefinition)==null?void 0:h.toJSON())??a.toJSON(),f),g=new Rt({rasterFunction:p});g.rasterJobHandler=this._rasterJobHandler.instance,await g.open(),this._cachedRasterFunctionJson=(m=this.rasterFunction)==null?void 0:m.toJSON(),this.raster=g}else this.raster=s,this._cachedRasterFunctionJson=null,await s.when();if(this._cachedRendererJson=null,!r&&!a)return;const{bandIds:l}=this,{bandCount:o}=this.raster.rasterInfo,c=l!=null&&l.length?l.some(f=>f>=o):o>=3;l&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:t,symbolizer:s}=this;if(!t||!s||!this.renderer)return;const{rasterInfo:r}=this.raster,a=et(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),l=a==null?void 0:a.name,o=tt({...this.renderer.toJSON(),variableName:l});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(o))return;const c=this._rasterJobHandler.instance;c&&(s.rasterInfo=it(r,l),s.rendererJSON=o,s.bind(),await c.updateSymbolizer(s),this._cachedRendererJson=o)}async applyRenderer(t,s){const r=t==null?void 0:t.pixelBlock;if(!(r!=null&&r.pixels&&r.pixels.length>0))return null;let a;await this.updateRenderer();const l=this._rasterJobHandler.instance,o=this.bandIds??[];return a=l?await l.symbolize({...t,simpleStretchParams:s,bandIds:o}):this.symbolizer.symbolize({...t,simpleStretchParams:s,bandIds:o}),a}getTileUrl(t,s,r){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${t}/${s}/${r}`:""}getCompatibleTileInfo(t,s,r=!1){if(!this.loaded||s==null)return null;if(r&&t.equals(this.spatialReference))return this.tileInfo;const a=Bt(t);return te.create({size:256,spatialReference:t,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,s,r,a={}){var o;if(n(this),a.requestAsImageElement){const c=this.getTileUrl(t,s,r);return dt(c,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(u=>u.data)}const{serviceRasterInfo:l}=this;if(l.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null){const c=a.tileInfo||l.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,s,r,c),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),((o=this.renderer)==null?void 0:o.type)==="raster-shaded-relief"&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,s,r,a)}async fetchPixels(t,s,r,a={}){return this.serviceRasterInfo.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),s=Math.round(s),r=Math.round(r),this.raster.fetchPixels(t,s,r,a))}async identify(t,s={}){var o;const{raster:r,serviceRasterInfo:a}=this;if(a.multidimensionalInfo!=null&&!(a.hasMultidimensionalTranspose&&(gt(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition==null)return{location:t,value:null};const l=(o=this.multidimensionalSubset)==null?void 0:o.areaOfInterest;if(l&&!l.contains(t))throw new O("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return r.identify(t,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var a,l,o;const t=(a=this.serviceRasterInfo)==null?void 0:a.multidimensionalInfo;if(t==null||((l=this.serviceRasterInfo)==null?void 0:l.dataType)!=="standard-time")return!1;const s=this.multidimensionalDefinition,r=(o=s==null?void 0:s[0])==null?void 0:o.variableName;return t.variables.some(c=>c.name===r&&(!(s!=null&&s[0].dimensionName)||c.dimensions.some(u=>u.name==="StdTime")))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){var r;const s=t??((r=this.serviceRasterInfo)==null?void 0:r.multidimensionalInfo);return ui(this.multidimensionalSubset,s)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Ze(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new mi;return this._rasterJobHandler.connectionPromise=t.initialize().then(async()=>{n(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch(()=>{}),this.renderer&&this.updateRenderer()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var t;if(this.interpolation==null){n(this);const{raster:s}=this,r=hi(s.rasterInfo,s.tileType,(t=this.sourceJSON)==null?void 0:t.defaultResamplingMethod);this._set("interpolation",r)}}_configDefaultRenderer(t="no"){var u,h;n(this);const{rasterInfo:s}=this.raster;!this.bandIds&&s.bandCount>1&&(this.bandIds=fi(s));const r=et(s,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),a=r==null?void 0:r.name;if(!this.renderer||t==="override"){const m=st(s,{bandIds:this.bandIds,variableName:a}),f=s.statistics,p=f&&f.length>0?f[0]:null,g=(p==null?void 0:p.max)??0,d=(p==null?void 0:p.min)??0;this.raster.datasetFormat==="WCSServer"&&m.type==="raster-stretch"&&(g>1e24||d<-1e24)&&(m.dynamicRangeAdjustment=!0,m.statistics=null,m.stretchType==="none"&&(m.stretchType="min-max")),this.renderer=m}const l=tt({...this.renderer.toJSON(),variableName:a}),o=it(s,a);this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=o):this.symbolizer=new Ti({rendererJSON:l,rasterInfo:o});const c=this.symbolizer.bind();if(c.success){if(t==="auto"){const{colormap:m}=this.raster.rasterInfo,f=this.renderer;if(m!=null&&f.type==="raster-colormap"){const p=st(this.raster.rasterInfo);JSON.stringify(p)!==JSON.stringify(f)&&this._configDefaultRenderer("override")}else if(f.type==="raster-stretch"){const p=(u=this.bandIds)==null?void 0:u.length,g=(h=f.statistics)==null?void 0:h.length;!f.dynamicRangeAdjustment&&g&&p&&g!==p&&this._configDefaultRenderer("override")}}}else ce.getLogger(this).warn("imagery-tile-mixin",c.error||"The given renderer is not supported by the layer."),t==="auto"&&this._configDefaultRenderer("override")}};function n(t){if(!t.raster||!t.serviceRasterInfo)throw new O("imagery-tile","no raster")}return I([v({clonable:!1})],e.prototype,"_cachedRendererJson",void 0),I([v({clonable:!1})],e.prototype,"_cachedRasterFunctionJson",void 0),I([v({clonable:!1})],e.prototype,"_compatibleFullExtent",void 0),I([v({clonable:!1})],e.prototype,"_isConstructedFromFunctionRaster",void 0),I([v({clonable:!1})],e.prototype,"_rasterJobHandler",void 0),I([v()],e.prototype,"bandIds",void 0),I([v({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),I([v({json:{read:!1}})],e.prototype,"fullExtent",null),I([v()],e.prototype,"interpolation",void 0),I([v()],e.prototype,"ioConfig",void 0),I([v({type:[je],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),I([v({type:ni,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),I([v()],e.prototype,"raster",void 0),I([v({type:ze,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),I([v({readOnly:!0})],e.prototype,"rasterInfo",null),I([v()],e.prototype,"serviceRasterInfo",void 0),I([v()],e.prototype,"sourceJSON",void 0),I([v({readOnly:!0,type:L,json:{read:!1}})],e.prototype,"spatialReference",void 0),I([v({type:te})],e.prototype,"tileInfo",void 0),I([v(wt)],e.prototype,"url",null),I([v({types:ri,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var s;const t=((s=this.renderer)==null?void 0:s.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:ai,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],e.prototype,"renderer",null),I([Ot("renderer")],e.prototype,"readRenderer",null),I([v({clonable:!1})],e.prototype,"symbolizer",void 0),e=I([K("esri.layers.ImageryTileMixin")],e),e};function hs(i){const e=i.fields,n=i.records,t=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",s=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),r=s.map(c=>c.name),a=[];let l=0,o=0;return n.forEach(c=>{const u={};for(u[t]=l++,o=1;o<r.length;o++)u[r[o]]=c[o-1];a.push({attributes:u})}),{displayFieldName:"",fields:s,features:a}}let St=class{static get supportedVersions(){return[5]}static parse(e){const n=new DataView(e),t=3&n.getUint8(0);if(t!==3)return{header:{version:t},recordSet:null};const s=n.getUint32(4,!0),r=n.getUint16(8,!0),a=n.getUint16(10,!0),l={version:t,recordCount:s,headerByteCount:r,recordByteCount:a};let o=32;const c=[],u=[];let h;if(t===3){for(;n.getUint8(o)!==13;)h=String.fromCharCode(n.getUint8(o+11)).trim(),c.push({name:nt(new Uint8Array(e,o,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:n.getUint8(o+16)}),o+=32;if(o+=1,c.length>0)for(;u.length<s&&e.byteLength-o>a;){const m=[];n.getUint8(o)===32?(o+=1,c.forEach(f=>{if(f.type==="C")m.push(nt(new Uint8Array(e,o,f.length)).trim());else if(f.type==="N")m.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,f.length)).trim(),10));else if(f.type==="F")m.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,f.length)).trim()));else if(f.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(e,o,f.length)).trim();m.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}o+=f.length}),u.push(m)):o+=a}}return{header:l,fields:c,records:u,recordSet:hs({fields:c,records:u})}}};const ae=new Map;ae.set("int16","esriFieldTypeSmallInteger"),ae.set("int32","esriFieldTypeInteger"),ae.set("int64","esriFieldTypeInteger"),ae.set("float32","esriFieldTypeSingle"),ae.set("float64","esriFieldTypeDouble"),ae.set("text","esriFieldTypeString");const ht=8;let pe=class extends ne{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:n}=await this.request(this.url+"/conf.json",{signal:e==null?void 0:e.signal});if(!this._validateHeader(n))throw new O("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:t,rasterInfo:s}=this._parseHeader(n);if(s.dataType==="thematic"){const r=await this._fetchAuxiliaryInformation();s.attributeTable=r}this._set("storageInfo",t),this._set("rasterInfo",s),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,n,t,s={}){const{transposeInfo:r}=this.rasterInfo.storageInfo,{transposedVariableName:a}=s,l=!(!r||!a),o=l?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(o<0)return null;const c=this._buildCacheFilePath(o,n,t,s.multidimensionalDefinition,a),u=this._getIndexRecordFromBundle(n,t,l),h=await this.request(c,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:s.signal});if(!h)return null;const m=new Uint8Array(h.data),f=this._getTileEndAndContentType(m,u);if(f.recordSize===0)return null;const p=await this.request(c,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:s.signal});if(!p)return null;const[g,d]=this._getTileSize(l);return this.decodePixelBlock(p.data,{width:g,height:d,planes:null,pixelType:null,returnInterleaved:l})}_validateHeader(e){const n=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&e.type==="RasterInfo"&&!n.some(t=>!e[t])}_parseHeader(e){var H,W,q,ee,U;const n=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:t,colormap:s,blockWidth:r,blockHeight:a,firstPyramidLevel:l,maximumPyramidLevel:o}=e,c=(H=e.statistics)==null?void 0:H.map(D=>({min:D.min,max:D.max,avg:D.mean,stddev:D.standardDeviation,median:D.median,mode:D.mode})),u=(ee=(q=(W=e.histograms)==null?void 0:W[0])==null?void 0:q.counts)!=null&&ee.length?e.histograms:null,h=e.extent.spatialReference,m=(U=e.geodataXform)==null?void 0:U.spatialReference,f=new L(h!=null&&h.wkid||h!=null&&h.wkt||h!=null&&h.wkt2?h:m);let p=new A({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:f});const g=new z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:f}),d=Math.round((p.xmax-p.xmin)/g.x),y=Math.round((p.ymax-p.ymin)/g.y),x=this._parseTransform(e.geodataXform),w=x?p:null;x&&(p=x.forwardTransform(p),g.x=(p.xmax-p.xmin)/d,g.y=(p.ymax-p.ymin)/y);const R=e.properties??{},T=e.format.toLowerCase().replace("cache/",""),b=new z(e.origin.x,e.origin.y,f);let _,k,S,F;if(s!=null&&s.colors)for(_=[],k=0;k<s.colors.length;k++)S=s.colors[k],F=s.values?s.values[k]:k,_.push([F,255&S,S<<16>>>24,S<<8>>>24,S>>>24]);const C=e.LODInfos,P=[];for(k=0;k<C.levels.length;k++)P.push(new pt({level:C.levels[k],resolution:C.resolutions[k],scale:96/.0254*C.resolutions[k]}));const N=new te({dpi:96,lods:P,format:T,origin:b,size:[r,a],spatialReference:f}),M={recordSize:ht,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*ht+64},$=[{maxCol:Math.ceil(d/r)-1,maxRow:Math.ceil(y/a)-1,minCol:0,minRow:0}];let B=2;if(o>0)for(k=0;k<o;k++)$.push({maxCol:Math.ceil(d/B/r)-1,maxRow:Math.ceil(y/B/a)-1,minCol:0,minRow:0}),B*=2;const E=e.mdInfo;let X=null;if(E&&R._yxs){const D=R._yxs;X={packetSize:D.PacketSize,tileSize:[D.TileXSize,D.TileYSize]}}return{storageInfo:M,rasterInfo:new we({width:d,height:y,pixelType:n,bandCount:t,extent:p,nativeExtent:w,transform:x,spatialReference:f,pixelSize:g,keyProperties:R,statistics:c,histograms:u,multidimensionalInfo:E,colormap:_,storageInfo:new xe({blockWidth:r,blockHeight:a,pyramidBlockWidth:r,pyramidBlockHeight:a,origin:b,tileInfo:N,transposeInfo:X,firstPyramidLevel:l,maximumPyramidLevel:o,blockBoundary:$})})}}_parseTransform(e){var t,s;if(!Gi(e))throw new O("cloudraster:open","the data contains unsupported geodata transform types");const n=ji(e);if(n.type==="identity")return null;if(n.type!=="polynomial"||!((t=n.forwardCoefficients)!=null&&t.length)||!((s=n.inverseCoefficients)!=null&&s.length))throw new O("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return n}async _fetchAuxiliaryInformation(e){const n=this.request(this.url+"/conf.vat.json",{signal:e}).then(a=>a.data).catch(()=>null),t=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(a=>a.data).catch(()=>null),s=await Promise.all([n,t]);let r;if(s[0]){let a=s[0].fields;const l=s[0].values;if(a&&l){a=a.map(c=>({type:c.name==="OID"?"esriFieldTypeOID":ae.get(c.type),name:c.name,alias:c.alias||c.name}));const o=l.map(c=>({attributes:c}));a&&l&&(r={fields:a,features:o})}}return!r&&s[1]&&(r=St.parse(s[1]).recordSet),ke.fromJSON(r)}_buildCacheFilePath(e,n,t,s,r){const a=this._getPackageSize(!!r),l=Math.floor(n/a)*a,o=Math.floor(t/a)*a,c="R"+this._toHexString4(l)+"C"+this._toHexString4(o);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:h}=this.rasterInfo,m=s==null?void 0:s[0];if(h==null||!m)return`${this.url}/_alllayers/${u}/${c}.bundle`;let f="_yxs";if(!r){f=h.variables.find(d=>d.name===m.variableName).dimensions[0].values.indexOf(m.values[0]).toString(16);const g=4-f.length;for(let d=0;d<g;d++)f="0"+f;f="S"+f}const p=this._getVariableFolderName(r||m.variableName);return`${this.url}/_alllayers/${p}/${f}/${u}/${c}.bundle`}_getPackageSize(e=!1){const{transposeInfo:n}=this.rasterInfo.storageInfo;return e&&n!=null?n.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:n}=this.rasterInfo,{transposeInfo:t}=n;return e&&t!=null?t.tileSize:n.tileInfo.size}_getVariableFolderName(e){return(e=e.trim())===""?"_v":e.replaceAll(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,n,t=!1){const s=this._getPackageSize(t),r=s*(e%s)+n%s;if(r<0)throw new Error("Invalid level / row / col");return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,n){const t=e.subarray(n,n+8);let s,r=0;for(s=0;s<5;s++)r|=(255&t[s])<<8*s;const a=0xffffffffff&r;for(r=0,s=5;s<8;s++)r|=(255&t[s])<<8*(s-5);return{position:a,recordSize:0xffffffffff&r}}_toHexString4(e){let n=e.toString(16);if(n.length!==4){let t=4-n.length;for(;t-- >0;)n="0"+n}return n}};I([v({readOnly:!0})],pe.prototype,"storageInfo",void 0),I([v({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),pe=I([K("esri.layers.support.rasterDatasets.CloudRaster")],pe);const fs=pe;function vt(i){return["x","e","east","long","longitude"].includes(i.toLowerCase())}function Tt(i){return["y","n","west","lat","latitude"].includes(i.toLowerCase())}function ms(i){const{axes:e}=i.domain,n=Object.keys(e),t=[],s=[];let r=-1,a=-1,l=[];for(let x=0;x<n.length;x++){const w=n[x];vt(w)?r=x:Tt(w)&&(a=x);const R=e[w],T=[];if("values"in R){R.values.forEach(_=>T.push(typeof _=="string"?new Date(_).getTime():_));const b=T[1]-T[0];t.push([T[0]-.5*b,T[T.length-1]+.5*b]),s.push(b)}else{const{start:b,stop:_,num:k}=R,S=(_-b)/(k-1);t.push([b-.5*S,_+.5*S]),s.push(S);for(let F=0;F<k;F++)T.push(b+S*F)}l.push({name:w,values:T,extent:[T[0],T[T.length-1]]})}r>-1&&a===-1?a=r===0?1:0:a>-1&&r===-1?r=a===0?1:0:a===-1&&r===-1&&(r=0,a=1),l=l.filter((x,w)=>!(w===r||w===a));const{referencing:o}=i.domain,c=o.find(x=>x.coordinates.includes(n[r])).system.id,u=c==null?void 0:c.slice(c.lastIndexOf("/")+1),h=u==null||u==="CRS84"?4326:Number(u),m=new L({wkid:h}),[f,p]=t[r],[g,d]=t[a],y=new A({xmin:f,xmax:p,ymin:g,ymax:d,spatialReference:m});return{width:Math.round(y.width/s[r]),height:Math.round(y.height/s[a]),extent:y,dimensions:l}}function Oe(i){const e=Nt();return e?i[e]??Object.values(i)[0]:Object.values(i)[0]}function $e(){return Math.round(255*Math.random())}function ds(i){var t,s;const e={},{parameters:n}=i;if(!n)return e;for(const[r,a]of Object.entries(n)){const{type:l,description:o,unit:c,categoryEncoding:u,observedProperty:h}=a;if(l==="Parameter"&&(e[r]={},o&&(e[r].description=Oe(o)),c&&(e[r].unit=c.label?Oe(c.label):null,e[r].symbol=(t=c.symbol)==null?void 0:t.value),u)){const m=Object.entries(u).map((g,d)=>({OID:d,Value:Number(g[1]),ClassName:g[0].slice(g[0].lastIndexOf("/")+1),Count:1}));let f=!1;(s=h==null?void 0:h.categories)!=null&&s.length&&(h.categories.forEach(g=>{if(!g.id)return;const d=g.id.slice(g.id.lastIndexOf("/")+1),y=m.find(w=>w.ClassName===d);if(!y)return;const x=g.label?Oe(g.label):null;if(y.Label=x,g.preferredColor){const w=Dt.fromHex(g.preferredColor);w&&(f=!0,y.Red=w.r,y.Green=w.g,y.Blue=w.b)}}),f&&m.forEach(g=>{g.Red==null&&(g.Red=$e(),g.Green=$e(),g.Blue=$e())}));const p={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:m.map(g=>({attributes:g}))};f&&p.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),e[r].attributeTable=p}}return e}function ps(i){let e=Number.MAX_VALUE,n=-Number.MAX_VALUE;for(let t=0;t<i.length;t++){const s=i[t];s!=null&&(s<e&&(e=s),s>n&&(n=s))}return _i(e,n)}function ys(i,e,n){const t=i.map((o,c)=>({name:o,count:e[c]})).sort((o,c)=>o.name>c.name?-1:1),s=(r=1,o=>r*=o.count);var r;const a=[...t.slice(1),{name:"",count:1}].reverse().map(s).reverse();let l=0;for(let o=i.length-1;o>=0;o--)l+=a[t.findIndex(({name:c})=>c===i[o])]*(n%e[o]),n=Math.floor(n/e[o]);return l}function gs(i){var m;const{width:e,height:n,extent:t,dimensions:s}=ms(i),{ranges:r}=i,a=Object.keys(r).sort((f,p)=>f<p?-1:1),l=[];for(let f=0;f<a.length;f++){const p=a[f];s!=null&&s.length&&l.push({name:p,dimensions:s})}const o=ds(i);l.forEach(f=>o[f.name]&&Object.assign(f,o[f.name]));const c=l.length?{variables:l}:void 0,u=[];for(let f=0;f<a.length;f++){const p=a[f],{values:g,dataType:d,axisNames:y,shape:x}=r[p],w=x.length>2?f*x.slice(0,-2).reduce((S,F)=>S*F):0,R=y.slice(0,-2),T=x.slice(0,-2),b=d==="float"?"f32":ps(g),_=e*n,k=g.length/_;for(let S=0;S<k;S++){const F=Y.createEmptyBand(b,_),C=new Uint8Array(_).fill(255);let P=!1;const N=S*_;for(let M=0;M<_;M++){const $=g[N+M];$==null?(C[M]=0,P=!0):F[M]=$}if(f===0||s!=null&&s.length){const M=new Y({width:e,height:n,mask:P?C:null,pixels:[F],pixelType:b});M.updateStatistics(),(s==null?void 0:s.length)?u[ys(R,T,S)+w]=M:u.push(M)}else{const M=u[S];M.pixels.push(F),P?M.mask&&(M.mask=Y.combineBandMasks([M.mask,C])):M.mask=P?C:null}}}const h=(m=Object.values(o).find(f=>f.attributeTable))==null?void 0:m.attributeTable;return{extent:t,pixelBlocks:u,multidimensionalInfo:c,attributeTable:h,bandNames:c?void 0:a}}let ue=class extends ne{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}async open(i){await this.init();const e=this.source,{pixelBlocks:n,attributeTable:t,statistics:s,histograms:r,name:a,nativeExtent:l,transform:o}=e,c=n[0],{width:u,height:h,pixelType:m}=c,f=e.extent??new A({xmin:-.5,ymin:.5,xmax:u-.5,ymax:h-.5,spatialReference:new L({wkid:3857})}),p=e.isPseudoSpatialReference??!e.extent,g={x:f.width/u,y:f.height/h},d={...e.keyProperties};t&&(d.DataType="Thematic");const y=new we({width:u,height:h,pixelType:m,extent:f,nativeExtent:l,attributeTable:t,transform:o,pixelSize:g,spatialReference:f.spatialReference,bandCount:c.pixels.length,keyProperties:d,multidimensionalInfo:e.multidimensionalInfo,statistics:s,isPseudoSpatialReference:p,histograms:r});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(y),this.createRemoteDatasetStorageInfo(y,512,512),this._set("rasterInfo",y),this.updateTileInfo(),y.multidimensionalInfo?await this._buildMDimStats(e.pixelBlocks,y.multidimensionalInfo):await this._buildInMemoryRaster(c,{width:512,height:512},i),y.multidimensionalInfo||(this.source=null),this.datasetName=a}fetchRawTile(i,e,n,t={}){if(!this._pixelBlockTiles){const{rasterInfo:r}=this,[a,l]=r.storageInfo.tileInfo.size,{sliceId:o}=t,{pixelBlocks:c}=this.source,u={pixelBlock:o==null?c[0]:c[o],useBilinear:r.dataType!=="thematic",tileSize:{width:a,height:l},level:i,row:e,col:n},h=this.rasterJobHandler?this.rasterJobHandler.clipTile(u,t):ki(u);return Promise.resolve(h)}const s=this._pixelBlockTiles.get(`${i}/${e}/${n}`);return Promise.resolve(s)}async _buildInMemoryRaster(i,e,n){var h,m;const{rasterInfo:t}=this,s=t.storageInfo.maximumPyramidLevel??0,r=t.dataType!=="thematic",a=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:i,tileSize:e,maximumPyramidLevel:s,useBilinear:r},n):Promise.resolve(Fi(i,e,s,r)),l=t.statistics!=null,o=t.histograms!=null,c=this.ioConfig.skipStatistics||l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:i},n):Promise.resolve(Ci(i)),u=await yt([a,c]);if(!u[0].value&&u[1].value)throw new O("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=u[0].value,l||(t.statistics=(h=u[1].value)==null?void 0:h.statistics),o||(t.histograms=(m=u[1].value)==null?void 0:m.histograms)}async _buildMDimStats(i,e,n){for(let t=0;t<e.variables.length;t++){const s=e.variables[t];if(s.statistics)continue;const r=s.dimensions.map(c=>{var u,h;return new je({variableName:s.name,dimensionName:c.name,values:[((u=c.values)==null?void 0:u[0])??((h=c.extent)==null?void 0:h[0])],isSlice:!0})}),a=xt(r,e),l=a==null?null:i[a];if(l==null)continue;const o=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:l},n):qe(l);s.statistics=o.statistics,s.histograms||(s.histograms=o.histograms)}}};I([v({type:String,json:{write:!0}})],ue.prototype,"datasetFormat",void 0),I([v()],ue.prototype,"source",void 0),I([v()],ue.prototype,"url",null),ue=I([K("esri.layers.support.rasterDatasets.InMemoryRaster")],ue);const Xe=ue;let ye=class extends ne{constructor(){super(...arguments),this.datasetFormat="CovJSON"}async open(e){await this.init();const{extent:n,pixelBlocks:t,multidimensionalInfo:s,attributeTable:r,bandNames:a}=await this._fetchData(e),{statistics:l,histograms:o}=qe(t[0]),c=a==null?void 0:a.map(f=>({BandName:f})),u={DataType:r?"Thematic":s?"Scientific":"Generic",BandProperties:c},h=new Xe({source:{extent:n,pixelBlocks:t,attributeTable:r?ke.fromJSON(r):null,multidimensionalInfo:s,statistics:l,histograms:o,keyProperties:u,isPseudoSpatialReference:!1}});await h.open(),this._inMemoryRaster=h;const m=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",m.slice(0,m.indexOf("."))),this._set("rasterInfo",h.rasterInfo)}fetchRawTile(e,n,t,s={}){return this._inMemoryRaster.fetchRawTile(e,n,t,s)}async _fetchData(e){var r,a,l,o;const n=this.source??(await this.request(this.url,{signal:e==null?void 0:e.signal})).data,t="imagery-tile-layer:open-coverage-json";if(((r=n.type)==null?void 0:r.toLowerCase())!=="coverage"||((l=(a=n.domain)==null?void 0:a.domainType)==null?void 0:l.toLowerCase())!=="grid")throw new O(t,"Only coverage with Grid domain type is supported");if(!n.ranges)throw new O(t,"Missing ranges in the grid coverage data");if(!((o=n.domain.referencing)!=null&&o.length))throw new O(t,"Missing domain referencing in the grid coverage data");const s=Object.values(n.ranges);for(let c=0;c<s.length;c++){const{axisNames:u,shape:h,type:m,values:f}=s[c];if(!(m.toLowerCase()==="ndarray"&&(f!=null&&f.length)&&(u!=null&&u.length)&&(h!=null&&h.length)))throw new O(t,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!(vt(u[u.length-1])&&Tt(u[u.length-2])))throw new O(t,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return gs(n)}};I([v({type:String,json:{write:!0}})],ye.prototype,"datasetFormat",void 0),I([v({constructOnly:!0})],ye.prototype,"source",void 0),ye=I([K("esri.layers.support.rasterDatasets.CovJSONRaster")],ye);const xs=ye;function me(i,e){if(!i||!e)return[];let n=e;e.includes("/")?(n=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const r=me(i,n);for(let a=0;a<r.length;a++)me(r[a],e).forEach(l=>t.push(l));return t}const s=i.getElementsByTagNameNS("*",n);if(!s||s.length===0)return[];for(let r=0;r<s.length;r++)t.push(s[r]||s.item(r));return t}function V(i,e){if(!i||!e)return null;let n=e;e.includes("/")?(n=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=me(i,n);return t.length>0?e?V(t[0],e):t[0]:null}function Z(i,e=null){const n=e?V(i,e):i;let t;return n?(t=n.textContent||n.nodeValue,t?t.trim():null):null}function ws(i,e){const n=me(i,e),t=[];let s;for(let r=0;r<n.length;r++)s=n[r].textContent||n[r].nodeValue,s&&(s=s.trim(),s!==""&&t.push(s));return t}function Se(i,e){return ws(i,e).map(n=>Number(n))}function le(i,e){const n=Z(i,e);return Number(n)}function Be(i,e){var s;const n=(s=i==null?void 0:i.nodeName)==null?void 0:s.toLowerCase(),t=e.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===t}function ft(i,e){if(!i||!e)return null;const n=[];for(let t=0;t<i.length;t++)n.push(i[t]),n.push(e[t]);return n}function Is(i){const e=V(i,"GeodataXform"),n=Ce(le(e,"SpatialReference/WKID")||Z(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:n,transform:null};const t=le(e,"PolynomialOrder")??1,s=Se(e,"CoeffX/Double"),r=Se(e,"CoeffY/Double"),a=Se(e,"InverseCoeffX/Double"),l=Se(e,"InverseCoeffY/Double"),o=ft(s,r),c=ft(a,l);return{spatialReference:n,transform:o&&c&&o.length&&c.length?new Ve({spatialReference:n,polynomialOrder:t,forwardCoefficients:o,inverseCoefficients:c}):null}}function bs(i){var m;const e=le(i,"NoDataValue"),n=V(i,"Histograms/HistItem"),t=le(n,"HistMin"),s=le(n,"HistMax"),r=le(n,"BucketCount"),a=(m=Z(n,"HistCounts"))==null?void 0:m.split("|").map(f=>Number(f));let l,o,c,u;me(i,"Metadata/MDI").forEach(f=>{const p=Number(f.textContent??f.nodeValue);switch(f.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=p;break;case"STATISTICS_MAXIMUM":o=p;break;case"STATISTICS_MEAN":c=p;break;case"STATISTICS_STDDEV":u=p}});const h=le(i,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:a!=null&&a.length&&t!=null&&s!=null?{min:t,max:s,size:r||a.length,counts:a}:null,sourceBandIndex:h,statistics:l!=null&&o!=null?{min:l,max:o,avg:c,stddev:u}:null}}function Ce(i){if(!i)return null;let e=Number(i);if(!isNaN(e)&&e!==0)return new L({wkid:e});if(i=String(i).trim(),Et(i))return new L({wkt2:i});const n=i.toUpperCase();if(n.startsWith("COMPD_CS")){if(!n.includes("VERTCS")||!n.includes("GEOGCS")&&!n.startsWith("PROJCS"))return null;const t=n.indexOf("VERTCS"),s=n.indexOf("PROJCS"),r=s>-1?s:n.indexOf("GEOGCS");if(r===-1)return null;const a=i.slice(r,i.lastIndexOf("]",t)+1).trim(),l=i.slice(t,i.lastIndexOf("]")).trim();e=De(a);const o=new L(e?{wkid:e}:{wkt:a}),c=De(l);return c&&(o.vcsWkid=c),o}return n.startsWith("GEOGCS")||n.startsWith("PROJCS")?(e=De(i),new L(e!==0?{wkid:e}:{wkt:i})):null}function De(i){var s;const e=i.replaceAll("]","[").replaceAll('"',"").split("[").map(r=>r.trim()).filter(r=>r!==""),n=e[e.length-1].split(","),t=(s=n[0])==null?void 0:s.toLowerCase();if((t==="epsg"||t==="esri")&&i.endsWith('"]]')){const r=Number(n[1]);if(!isNaN(r)&&r!==0)return r}return 0}function Ye(i){var t;if(((t=i==null?void 0:i.documentElement.tagName)==null?void 0:t.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};i.documentElement.childNodes.forEach(s=>{if(s.nodeType===1){if(Be(s,"SRS")){if(!e.spatialReference){const r=Z(s);e.spatialReference=Ce(r)}}else if(Be(s,"Metadata"))if(s.getAttribute("domain")==="xml:ESRI"){const{spatialReference:r,transform:a}=Is(s);e.transform=a,e.spatialReference||(e.spatialReference=r)}else me(s,"MDI").forEach(r=>e.metadata[r.getAttribute("key")]=Z(r));else if(Be(s,"PAMRasterBand")){const r=bs(s);r.sourceBandIndex!=null&&e.rasterBands[r.sourceBandIndex]==null?e.rasterBands[r.sourceBandIndex]=r:e.rasterBands.push(r)}}});const n=e.rasterBands;if(n.length){const s=!!n[0].statistics;e.statistics=s?n.map(a=>a.statistics).filter(Je):null;const r=!!n[0].histogram;e.histograms=r?n.map(a=>a.histogram).filter(Je):null}return e}let _e=class extends ne{async open(i){await this.init();const e=await this._fetchData(i);let{spatialReference:n,statistics:t,histograms:s,transform:r}=await this._fetchAuxiliaryData(i);const a=!n;a&&(n=new L({wkid:3857})),s!=null&&s.length&&t==null&&(t=Ue(s));const{width:l,height:o}=e;let c=new A({xmin:-.5,ymin:.5-o,xmax:l-.5,ymax:.5,spatialReference:n});const u=r?r.forwardTransform(c):c;let h=!0;if(r){const f=r.forwardCoefficients;h=f&&f[1]===0&&f[2]===0,h&&(r=null,c=u)}const m=new Xe({source:{extent:u,nativeExtent:c,transform:r,pixelBlocks:[e],statistics:t,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(m.ioConfig.skipMapInfo=!0),await m.open(),m.source=null,this._set("rasterInfo",m.rasterInfo),this._inMemoryRaster=m}fetchRawTile(i,e,n,t={}){return this._inMemoryRaster.fetchRawTile(i,e,n,t)}async _fetchData(i){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:i==null?void 0:i.signal}),n=Mi(e).toUpperCase();if(n!=="JPG"&&n!=="PNG"&&n!=="GIF"&&n!=="BMP")throw new O("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",n);const t=n.toLowerCase(),s=t==="gif"||t==="bmp"||!Jt("ios"),r=await this.decodePixelBlock(e,{format:t,useCanvas:s,hasNoZlibMask:!0});if(r==null)throw new O("image-aux-raster:open","the data cannot be decoded");return r}async _fetchAuxiliaryData(i){var u;const e=i==null?void 0:i.signal,{skipExtensions:n=[],skipMapInfo:t}=this.ioConfig,s=t||n.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),r=this.datasetFormat,a=r==="JPG"?"jgw":r==="PNG"?"pgw":r==="BMP"?"bpw":null,l=a&&n.includes(a)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+a,{responseType:"text",signal:e}),o=await yt([s,l]);if(e!=null&&e.aborted)throw zt();const c=Ye((u=o[0].value)==null?void 0:u.data);if(!c.transform){const h=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(m=>Number(m)):null;c.transform=(h==null?void 0:h.length)===6?new Ve({forwardCoefficients:[h[4],h[5],h[0],-h[1],h[2],-h[3]]}):null}return c}};I([v({type:String,json:{write:!0}})],_e.prototype,"datasetFormat",void 0),_e=I([K("esri.layers.support.rasterDatasets.ImageAuxRaster")],_e);const ve=_e;let ge=class extends ne{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(i){var _,k;await this.init();const e=i==null?void 0:i.signal,n=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});n.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const t=n.data;if(this.sourceJSON=t,!t)throw new O("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!t.tileInfo)throw new O("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const s=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=t.cacheType,this.tileType==null&&(s.includes(t.tileInfo.format.toLowerCase())?this.tileType="Map":t.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=((_=t.name)==null?void 0:_.slice(t.name.indexOf("/")+1))??"";const r=await this._fetchRasterInfo({signal:e});if(r==null)throw new O("image-server-raster:open","cannot initialize image service");di(r,t);const a=this.tileType==="Map"?Rs(t.tileInfo,t):te.fromJSON(t.tileInfo);At(a);const[l,o]=this._computeMinMaxLOD(r,a),{extent:c,pixelSize:u}=r,h=.5/r.width*u.x,m=Math.max(u.x,u.y),{lods:f}=a;(this.tileType!=="Map"&&t.maxScale!==0||Math.abs(u.x-u.y)>h||!f.some(S=>Math.abs(S.resolution-m)<h))&&(u.x=u.y=l.resolution,r.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),r.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const p=l.level-o.level,[g,d]=a.size,y=[],x=[];f.forEach((S,F)=>{S.level>=o.level&&S.level<=l.level&&y.push({x:S.resolution,y:S.resolution}),F<f.length-1&&x.push(Math.round(10*S.resolution/f[F+1].resolution)/10)}),y.sort((S,F)=>S.x-F.x);const w=this.computeBlockBoundary(c,g,d,a.origin,y,p),R=y.length>1?y.slice(1):null;let T;t.transposeInfo&&(T={tileSize:[t.transposeInfo.rows,t.transposeInfo.cols],packetSize:((k=r.keyProperties)==null?void 0:k._yxs.PacketSize)??0});const b=x.length<=1||x.length>=3&&x.slice(0,-1).every(S=>S===x[0])?x[0]??2:Math.round(10/(o.resolution/l.resolution)**(-1/p))/10;if(r.storageInfo=new xe({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:R,pyramidScalingFactor:b,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:a,transposeInfo:T,blockBoundary:w}),this._fixGCSShift(r),this._set("rasterInfo",r),t.capabilities.toLowerCase().includes("tilemap")){const S={tileInfo:r.storageInfo.tileInfo,parsedUrl:Lt(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Ki({layer:S})}}async fetchRawTile(i,e,n,t={}){const{storageInfo:s,extent:r}=this.rasterInfo,{transposeInfo:a}=s,l=a!=null&&!!t.transposedVariableName;if(this._slices&&!l&&t.sliceId==null)return null;const o=l?0:s.maximumPyramidLevel-i+this._levelOffset,c=`${this.url}/tile/${o}/${e}/${n}`,u=this._slices?l?{variable:t.transposedVariableName}:{sliceId:t.sliceId||0}:null,{data:h}=await this.request(c,{query:u,responseType:"array-buffer",signal:t.signal});if(!h)return null;const m=l?a.tileSize:s.tileInfo.size,f=await this.decodePixelBlock(h,{width:m[0],height:m[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:l,noDataValue:this.rasterInfo.noDataValue});if(f==null)return null;const p=s.blockBoundary[i];if(s.compression!=="jpg"||n>p.minCol&&n<p.maxCol&&e>p.minRow&&e<p.maxRow)return f;const{origin:g,blockWidth:d,blockHeight:y}=s,{x,y:w}=this.getPyramidPixelSize(i),R=Math.round((r.xmin-g.x)/x)%d,T=Math.round((r.xmax-g.x)/x)%d||d,b=Math.round((g.y-r.ymax)/w)%y,_=Math.round((g.y-r.ymin)/w)%y||y,k=n===p.minCol?R:0,S=e===p.minRow?b:0,F=n===p.maxCol?T:d,C=e===p.maxRow?_:y;return Pi(f,{x:k,y:S},{width:F-k,height:C-S}),f}getSliceIndex(i){if(!this._slices||i==null||i.length===0)return null;const e=i;for(let n=0;n<this._slices.length;n++){const t=this._slices[n].multidimensionalDefinition;if(t.length===e.length&&!t.some(s=>{const r=e.find(a=>s.variableName===a.variableName&&a.dimensionName===s.dimensionName);return r?(Array.isArray(s.values[0])?`${s.values[0][0]}-${s.values[0][1]}`:s.values[0])!==(Array.isArray(r.values[0])?`${r.values[0][0]}-${r.values[0][1]}`:r.values[0]):!0}))return n}return null}async fetchVariableStatisticsHistograms(i,e){var r,a,l;const n=this.request(this.url+"/statistics",{query:{variable:i,f:"json"},signal:e}).then(o=>{var c;return(c=o.data)==null?void 0:c.statistics}),t=this.request(this.url+"/histograms",{query:{variable:i,f:"json"},signal:e}).then(o=>{var c;return(c=o.data)==null?void 0:c.histograms}),s=await Promise.all([n,t]);return s[0]&&s[0].forEach(o=>{o.avg=o.mean,o.stddev=o.standardDeviation}),(l=(a=(r=s[1])==null?void 0:r[0])==null?void 0:a.counts)!=null&&l.length||(s[1]=null),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(i,e={}){if(!this._tilemapCache)return 0;let n=this.identifyPixelLocation(i,0,e.datumTransformation);if(n===null)return null;let t=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let r=s-t+this._levelOffset;const a=n.srcLocation;for(;r>=0;){try{if(await this._tilemapCache.fetchAvailability(r,n.row,n.col,e)==="available")break}catch{}if(r--,t++,n=this.identifyPixelLocation(a,t,e.datumTransformation),n===null)return null}return r===-1||n==null?null:t}async _fetchRasterInfo(i){const e=this.sourceJSON;if(this.tileType==="Map"){const a=e.fullExtent||e.extent,l=Math.ceil((a.xmax-a.xmin)/e.pixelSizeX-.1),o=Math.ceil((a.ymax-a.ymin)/e.pixelSizeY-.1),c=L.fromJSON(e.spatialReference||a.spatialReference),u=new z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new we({width:l,height:o,bandCount:3,extent:A.fromJSON(a),spatialReference:c,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:n}=i,t=pi(this.url,this.sourceJSON,{signal:n,query:this.ioConfig.customFetchParameters}),s=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:n}).then(a=>{var l;return(l=a.data)==null?void 0:l.slices}).catch(()=>null):null,r=await Promise.all([t,s]);return this._slices=r[1],r[0]}_fixScaleInServiceInfo(){const{sourceJSON:i}=this;i.minScale&&i.minScale<0&&(i.minScale=0),i.maxScale&&i.maxScale<0&&(i.maxScale=0)}_fixGCSShift(i){const{extent:e,spatialReference:n}=i;e.xmin>-1&&e.xmax>181&&(n!=null&&n.wkid)&&n.isGeographic&&(i.nativeExtent=i.extent,i.transform=new qi,i.extent=i.transform.forwardTransform(e))}_computeMinMaxLOD(i,e){const{pixelSize:n}=i,t=.5/i.width*n.x,{lods:s}=e,r=e.lodAt(Math.max.apply(null,s.map(m=>m.level))),a=e.lodAt(Math.min.apply(null,s.map(m=>m.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=s[0].level,[r,a];if(l==="Raster")return[s.find(m=>m.resolution===n.x)??r,a];const{minScale:o,maxScale:c}=this.sourceJSON;let u=r;c>0&&(u=s.find(m=>Math.abs(m.scale-c)<t),u||(u=s.filter(m=>m.scale>c).sort((m,f)=>m.scale>f.scale?1:-1)[0]??r));let h=a;return o>0&&(h=s.find(m=>Math.abs(m.scale-o)<t)??a,this._levelOffset=h.level-a.level),[u,h]}};function Rs(i,e){if(!i)return null;const{minScale:n,maxScale:t,minLOD:s,maxLOD:r}=e;if(s!=null&&r!=null)return te.fromJSON({...i,lods:i.lods.filter(({level:a})=>a!=null&&a>=s&&a<=r)});if(n!==0&&t!==0){const a=c=>Math.round(1e4*c)/1e4,l=n?a(n):1/0,o=t?a(t):-1/0;return te.fromJSON({...i,lods:i.lods.filter(c=>{const u=a(c.scale);return u<=l&&u>=o})})}return te.fromJSON(i)}I([v({type:String,json:{write:!0}})],ge.prototype,"datasetFormat",void 0),I([v()],ge.prototype,"tileType",void 0),ge=I([K("esri.layers.support.rasterDatasets.ImageServerRaster")],ge);const Ss=ge,Q=new Map;Q.set("Int8","s8"),Q.set("UInt8","u8"),Q.set("Int16","s16"),Q.set("UInt16","u16"),Q.set("Int32","s32"),Q.set("UInt32","u32"),Q.set("Float32","f32"),Q.set("Float64","f32"),Q.set("Double64","f32");const ie=new Map;ie.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ie.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ie.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ie.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let he=class extends ne{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(i){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=i?i.signal:null,n=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:t,files:s}=this._parseHeader(n.data),{skipMapInfo:r,skipExtensions:a=[]}=this.ioConfig;if(!a.includes("aux.xml")&&!r){const y=await this._fetchAuxiliaryData(i);y!=null&&(t.statistics=y.statistics??t.statistics,t.histograms=y.histograms,y.histograms&&t.statistics==null&&(t.statistics=Ue(y.histograms)))}r&&this.updateImageSpaceRasterInfo(t),this._set("rasterInfo",t),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(l.data);const{blockWidth:o,blockHeight:c}=this.rasterInfo.storageInfo,u=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:m}=this.rasterInfo,f=[],p=this._getBandSegmentCount();let g=0,d=-1;for(;g<this._storageIndex.length;){d++;const y=Math.ceil(h/o/u**d)-1,x=Math.ceil(m/c/u**d)-1;g+=(y+1)*(x+1)*p*4,f.push({maxRow:x,maxCol:y,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=f,d>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=d),this.updateTileInfo()}async fetchRawTile(i,e,n,t={}){const{blockWidth:s,blockHeight:r,blockBoundary:a}=this.rasterInfo.storageInfo,l=a[i];if(!l||l.maxRow<e||l.maxCol<n||l.minRow>e||l.minCol>n)return null;const{bandCount:o,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:m}=this._getTileLocation(i,e,n);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const C=new Uint8Array(s*r);return new Y({width:s,height:r,pixels:null,mask:C,validPixelCount:0})}const{bandIds:f}=this.ioConfig,p=this._getBandSegmentCount(),g=[];let d=0;for(d=0;d<p;d++)f&&!f.includes(d)||g.push(this.request(this._files.data,{range:{from:u[d].from,to:u[d].to},responseType:"array-buffer",signal:t.signal}));const y=await Promise.all(g),x=y.map(C=>C.data.byteLength).reduce((C,P)=>C+P),w=new Uint8Array(x),R=[];let T=0;for(d=0;d<p;d++)R.push(T),w.set(new Uint8Array(y[d].data),T),T+=y[d].data.byteLength;const b=ie.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(w.buffer,{width:s,height:r,format:b,planes:(f==null?void 0:f.length)||o,offsets:R,pixelType:c});if(_==null)return null;let{noDataValue:k}=this.rasterInfo;if(k!=null&&b!=="lerc"&&!_.mask&&(k=k[0],k!=null)){const C=_.width*_.height,P=new Uint8Array(C);if(Math.abs(k)>1e24)for(d=0;d<C;d++)Math.abs((_.pixels[0][d]-k)/k)>1e-6&&(P[d]=1);else for(d=0;d<C;d++)_.pixels[0][d]!==k&&(P[d]=1);_.mask=P}let S=0,F=0;if(h!==s||m!==r){let C=_.mask;if(C)for(d=0;d<r;d++)if(F=d*s,d<m)for(S=h;S<s;S++)C[F+S]=0;else for(S=0;S<s;S++)C[F+S]=0;else for(C=new Uint8Array(s*r),_.mask=C,d=0;d<m;d++)for(F=d*s,S=0;S<h;S++)C[F+S]=1}return _}_parseIndex(i){if(i.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,n,t,s,r,a;if(Oi){for(n=new Uint8Array(i),s=new ArrayBuffer(i.byteLength),t=new Uint8Array(s),r=0;r<i.byteLength/4;r++)for(a=0;a<4;a++)t[4*r+a]=n[4*r+3-a];e=new Uint32Array(s)}else e=new Uint32Array(i);return e}_getBandSegmentCount(){return ie.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(i,e,n){const{blockWidth:t,blockHeight:s,pyramidScalingFactor:r}=this.rasterInfo.storageInfo,{width:a,height:l}=this.rasterInfo,o=this._getBandSegmentCount();let c,u,h,m=0,f=0;for(h=0;h<i;h++)f=r**h,c=Math.ceil(a/t/f),u=Math.ceil(l/s/f),m+=c*u;f=r**i,c=Math.ceil(a/t/f),u=Math.ceil(l/s/f),m+=e*c+n,m*=4*o;const p=this._storageIndex.subarray(m,m+4*o);let g=0,d=0;const y=[];for(let x=0;x<o;x++)g=p[4*x]*2**32+p[4*x+1],d=g+p[4*x+2]*2**32+p[4*x+3],y.push({from:g,to:d});return{ranges:y,actualTileWidth:n<c-1?t:Math.ceil(a/f)-t*(c-1),actualTileHeight:e<u-1?s:Math.ceil(l/f)-s*(u-1)}}_parseHeader(i){const e=V(i,"MRF_META/Raster");if(!e)throw new O("mrf:open","not a valid MRF format");const n=V(e,"Size"),t=parseInt(n.getAttribute("x"),10),s=parseInt(n.getAttribute("y"),10),r=parseInt(n.getAttribute("c"),10),a=(Z(e,"Compression")||"none").toLowerCase();if(!ie.has(a))throw new O("mrf:open","currently does not support compression "+a);const l=Z(e,"DataType")||"UInt8",o=Q.get(l);if(o==null)throw new O("mrf:open","currently does not support pixel type "+l);const c=V(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),h=parseInt(c.getAttribute("y"),10),m=V(e,"DataValues");let f,p;if(m&&(p=m.getAttribute("NoData"),p!=null&&(f=p.trim().split(" ").map(C=>parseFloat(C)))),V(i,"MRF_META/CachedSource"))throw new O("mrf:open","currently does not support MRF referencing other data files");const g=V(i,"MRF_META/GeoTags"),d=V(g,"BoundingBox");let y,x=!1;if(d!=null){const C=parseFloat(d.getAttribute("minx")),P=parseFloat(d.getAttribute("miny")),N=parseFloat(d.getAttribute("maxx")),M=parseFloat(d.getAttribute("maxy")),$=Z(g,"Projection")||"";let B=L.WGS84;if($!=="LOCAL_CS[]")if($.toLowerCase().startsWith("epsg:")){const E=Number($.slice(5));isNaN(E)||E===0||(B=new L({wkid:E}))}else B=Ce($)??L.WGS84;else x=!0,B=new L({wkid:3857});y=new A(C,P,N,M),y.spatialReference=B}else x=!0,y=new A({xmin:-.5,ymin:.5-s,xmax:t-.5,ymax:.5,spatialReference:new L({wkid:3857})});const w=V(i,"MRF_META/Rsets"),R=parseInt((w==null?void 0:w.getAttribute("scale"))||"2",10),T=y.spatialReference,b=new xe({origin:new z({x:y.xmin,y:y.ymax,spatialReference:T}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:a,pyramidScalingFactor:R}),_=new z({x:y.width/t,y:y.height/s,spatialReference:T}),k=new we({width:t,height:s,extent:y,isPseudoSpatialReference:x,spatialReference:T,bandCount:r,pixelType:o,pixelSize:_,noDataValue:f,storageInfo:b}),S=Z(i,"datafile"),F=Z(i,"IndexFile");return{rasterInfo:k,files:{mrf:this.url,index:F||this.url.replace(".mrf",".idx"),data:S||this.url.replace(".mrf",ie.get(a).blobExtension)}}}async _fetchAuxiliaryData(i){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:i==null?void 0:i.signal});return Ye(e)}catch{return null}}};I([v()],he.prototype,"_files",void 0),I([v()],he.prototype,"_storageIndex",void 0),I([v({type:String,json:{write:!0}})],he.prototype,"datasetFormat",void 0),he=I([K("esri.layers.support.rasterIO.MRFRaster")],he);const vs=he,Ne=(i,e)=>{var n;return(n=i.get(e))==null?void 0:n.values},de=(i,e)=>{var n,t;return(t=(n=i.get(e))==null?void 0:n.values)==null?void 0:t[0]};let oe=class extends ne{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(i){var g,d,y,x;await this.init();const e=i?i.signal:null,{data:n}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!n)throw new O("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:t,firstIFDPos:s,isBigTiff:r}=$i(n),a=[];await this._readIFDs(a,n,t,s,0,r?8:4,e);const{imageInfo:l,rasterInfo:o}=this._parseIFDs(a),c=Bi(a),u=Di(a);if(this._headerInfo={littleEndian:t,isBigTiff:r,ifds:a,pyramidIFDs:c,maskIFDs:u,...l},this._set("rasterInfo",o),!l.isSupported)throw new O("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new O("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");o.isPseudoSpatialReference&&ce.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const h=(d=(g=a[0].get("PREDICTOR"))==null?void 0:g.values)==null?void 0:d[0];if(((x=(y=a[0].get("SAMPLEFORMAT"))==null?void 0:y.values)==null?void 0:x[0])===3&&h===2)throw new O("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:f,skipExtensions:p=[]}=this.ioConfig;if(!p.includes("aux.xml")&&!f){const w=await this._fetchAuxiliaryMetaData(i);w!=null&&this._processPAMInfo(w,o)}p.includes("vat.dbf")||o.bandCount!==1||o.pixelType!=="u8"||f||(o.attributeTable=await this._fetchAuxiliaryTable(i),o.attributeTable!=null&&(o.keyProperties.DataType="thematic")),f&&this.updateImageSpaceRasterInfo(o),this.updateTileInfo()}async fetchRawTile(i,e,n,t={}){var r;if(!((r=this._headerInfo)!=null&&r.isSupported)||this.isBlockOutside(i,e,n))return null;const s=await this._fetchRawTiffTile(i,e,n,!1,t);if(s!=null&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(i,e,n,!0,t);a!=null&&a.pixels[0]instanceof Uint8Array&&(s.mask=a.pixels[0])}return s}_parseIFDs(i){var P,N;const e=Ni(i),{width:n,height:t,tileWidth:s,tileHeight:r,planes:a,pixelType:l,compression:o,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:m,tileBoundary:f,affine:p,metadata:g}=e,d=((P=e.extent.spatialReference)==null?void 0:P.wkt)||((N=e.extent.spatialReference)==null?void 0:N.wkid);let y=Ce(d),x=!!e.isPseudoGeographic;y==null&&(x=!0,y=new L({wkid:3857}));const w=new A({...e.extent,spatialReference:y}),R=new z(w?{x:w.xmin,y:w.ymax,spatialReference:y}:{x:0,y:0}),T=new xe({blockWidth:s,blockHeight:r,pyramidBlockWidth:h,pyramidBlockHeight:m,compression:o,origin:R,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:f}),b=new z({x:(w.xmax-w.xmin)/n,y:(w.ymax-w.ymin)/t,spatialReference:y}),_=g?{BandProperties:g.bandProperties,DataType:g.dataType}:{};let k=null;const S=de(i[0],"PHOTOMETRICINTERPRETATION"),F=Ne(i[0],"COLORMAP");if(S<=3&&(F==null?void 0:F.length)>3&&F.length%3==0){k=[];const M=F.length/3;for(let $=0;$<M;$++)k.push([$,F[$]>>>8,F[$+M]>>>8,F[$+2*M]>>>8])}const C=new we({width:n,height:t,bandCount:a,pixelType:l,pixelSize:b,storageInfo:T,spatialReference:y,isPseudoSpatialReference:x,keyProperties:_,extent:w,colormap:k,statistics:g?g.statistics:null});return p!=null&&p.length&&(C.nativeExtent=new A({xmin:-.5,ymin:.5-t,xmax:n-.5,ymax:.5,spatialReference:y}),C.transform=new Ve({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new z({x:(w.xmax-w.xmin)/n,y:(w.ymax-w.ymin)/t,spatialReference:y}),T.origin.x=-.5,T.origin.y=.5),{imageInfo:e,rasterInfo:C}}_processPAMInfo(i,e){if(e.statistics=i.statistics??e.statistics,e.histograms=i.histograms,i.histograms&&e.statistics==null&&(e.statistics=Ue(i.histograms)),i.transform&&e.transform==null){e.transform=i.transform,e.nativeExtent=e.extent;const n=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new z({x:(n.xmax-n.xmin)/e.width,y:(n.ymax-n.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=n}e.isPseudoSpatialReference&&i.spatialReference&&(e.spatialReference=i.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}async _readIFDs(i,e,n,t,s,r=4,a){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(await this.request(this.url,{range:{from:t+s,to:t+s+this._bufferSize},responseType:"array-buffer",signal:a})).data,s=t+s,t=0);const l=await this._readIFD(e,n,t,s,Ie.tiffTags,r,a);if(i.push(l.ifd),!l.nextIFD)return null;await this._readIFDs(i,e,n,l.nextIFD-s,s,r,a)}async _readIFD(i,e,n,t,s=Ie.tiffTags,r=4,a){var o,c;if(!i)return null;const l=Ei(i,e,n,t,s,r);if(l.success){const u=[];if((o=l.ifd)==null||o.forEach(h=>{h.values||u.push(h)}),u.length>0){const h=u.map(f=>f.offlineOffsetSize).filter(Je),m=Math.min.apply(null,h.map(f=>f[0]));if(Math.min.apply(null,h.map(f=>f[0]+f[1]))-m<=this._bufferSize){const{data:f}=await this.request(this.url,{range:{from:m,to:m+this._bufferSize},responseType:"array-buffer",signal:a});i=f,t=m,u.forEach(p=>Ji(i,e,p,t))}}if((c=l.ifd)!=null&&c.has("GEOKEYDIRECTORY")){const h=l.ifd.get("GEOKEYDIRECTORY"),m=h==null?void 0:h.values;if(m&&m.length>4){const f=m[0]+"."+m[1]+"."+m[2],p=await this._readIFD(i,e,h.valueOffset+6-t,t,Ie.geoKeys,2,a);h.data=p.ifd,h.data&&h.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[f]})}}return l}if(l.requiredBufferSize&&l.requiredBufferSize!==i.byteLength)return(i=(await this.request(this.url,{range:{from:t,to:t+l.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<l.requiredBufferSize?null:this._readIFD(i,e,0,t,Ie.tiffTags,4,a)}async _fetchRawTiffTile(i,e,n,t,s={}){const r=this._getTileLocation(i,e,n,t);if(!r)return null;const{ranges:a,actualTileWidth:l,actualTileHeight:o,ifd:c}=r,u=a.map(b=>this.request(this.url,{range:b,responseType:"array-buffer",signal:s.signal})),h=await Promise.all(u),m=h.map(b=>b.data.byteLength).reduce((b,_)=>b+_),f=h.length===1?h[0].data:new ArrayBuffer(m),p=[0],g=[0];if(h.length>1){const b=new Uint8Array(f);for(let _=0,k=0;_<h.length;_++){const S=h[_].data;b.set(new Uint8Array(S),k),p[_]=k,k+=S.byteLength,g[_]=S.byteLength}}const{blockWidth:d,blockHeight:y}=this.getBlockWidthHeight(i),x=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:g},width:d,height:y,planes:null,pixelType:null});if(x==null)return null;let w,R,T;if(l!==d||o!==y){let b=x.mask;if(b)for(w=0;w<y;w++)if(T=w*d,w<o)for(R=l;R<d;R++)b[T+R]=0;else for(R=0;R<d;R++)b[T+R]=0;else for(b=new Uint8Array(d*y),x.mask=b,w=0;w<o;w++)for(T=w*d,R=0;R<l;R++)b[T+R]=1}return x}_getTileLocation(i,e,n,t=!1){const{firstPyramidLevel:s,blockBoundary:r}=this.rasterInfo.storageInfo,a=i===0?0:i-(s-1),{_headerInfo:l}=this;if(!l)return null;const o=t?l.maskIFDs[a]:a===0?l==null?void 0:l.ifds[0]:l==null?void 0:l.pyramidIFDs[a-1];if(!o)return null;const c=zi(o,l),u=Ne(o,"TILEOFFSETS");if(u===void 0)return null;const h=Ne(o,"TILEBYTECOUNTS"),{minRow:m,minCol:f,maxRow:p,maxCol:g}=r[a];if(e>p||n>g||e<m||n<f)return null;const d=de(o,"IMAGEWIDTH"),y=de(o,"IMAGELENGTH"),x=de(o,"TILEWIDTH"),w=de(o,"TILELENGTH"),R=[];if(c){const{bandCount:T}=this.rasterInfo;for(let b=0;b<T;b++){const _=b*(p+1)*(g+1)+e*(g+1)+n;R[b]={from:u[_],to:u[_]+h[_]-1}}}else{const T=e*(g+1)+n;R.push({from:u[T],to:u[T]+h[T]-1})}for(let T=0;T<R.length;T++)if(R[T].from==null||!R[T].to||R[T].to<0)return null;return{ranges:R,ifd:o,actualTileWidth:n===g&&d%x||x,actualTileHeight:e===p&&y%w||w}}async _fetchAuxiliaryMetaData(i){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:i==null?void 0:i.signal});return Ye(e)}catch{return null}}async _fetchAuxiliaryTable(i){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:i==null?void 0:i.signal}),n=St.parse(e);return n!=null&&n.recordSet?ke.fromJSON(n.recordSet):null}catch{return null}}};I([v()],oe.prototype,"_files",void 0),I([v()],oe.prototype,"_headerInfo",void 0),I([v()],oe.prototype,"_bufferSize",void 0),I([v({type:String,json:{write:!0}})],oe.prototype,"datasetFormat",void 0),oe=I([K("esri.layers.support.rasterDatasets.TIFFRaster")],oe);const Ts=oe,j=new Map;j.set("CRF",{desc:"Cloud Raster Format",constructor:fs}),j.set("MRF",{desc:"Meta Raster Format",constructor:vs}),j.set("TIFF",{desc:"GeoTIFF",constructor:Ts}),j.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Ss}),j.set("JPG",{desc:"JPG Raster Format",constructor:ve}),j.set("PNG",{desc:"PNG Raster Format",constructor:ve}),j.set("GIF",{desc:"GIF Raster Format",constructor:ve}),j.set("BMP",{desc:"BMP Raster Format",constructor:ve}),j.set("CovJSON",{desc:"COVJSON Raster Format",constructor:xs}),j.set("MEMORY",{desc:"In Memory Raster Format",constructor:Xe});class Ee{static get supportedFormats(){const e=new Set;return j.forEach((n,t)=>e.add(t)),e}static async open(e){var h;const{url:n,ioConfig:t,source:s,sourceJSON:r}=e;let a=e.datasetFormat??(t==null?void 0:t.datasetFormat);a==null&&(n.includes(".")?a=n.slice(n.lastIndexOf(".")+1).toUpperCase():((h=s==null?void 0:s.type)==null?void 0:h.toLowerCase())==="coverage"?a="CovJSON":s!=null&&s.extent&&s.pixelblocks&&(a="MEMORY")),a==="OVR"||a==="TIF"?a="TIFF":a==="JPG"||a==="JPEG"||a==="JFIF"?a="JPG":a==="COVJSON"&&(a="CovJSON"),n.toLowerCase().includes("/imageserver")&&!n.toLowerCase().includes("/wcsserver")&&(a="RasterTileServer");const l={url:n,source:s,sourceJSON:r,datasetFormat:a,ioConfig:t??{bandIds:null,sampling:null}};if(Object.keys(l).forEach(m=>{l[m]==null&&delete l[m]}),a){if(!this.supportedFormats.has(a))throw new O("rasterfactory:open","not a supported format "+a);if(a==="CRF"&&!(t!=null&&t.enableCRF))throw new O("rasterfactory:open",`cannot open raster: ${n}`);const m=new(j.get(a)).constructor(l);return await m.open({signal:e.signal}),m}const o=Array.from(j.keys()).filter(m=>m!=="CovJSON"&&m!=="Memory");let c=0;const u=()=>{if(a=o[c++],!a||a==="CRF"&&!(t!=null&&t.enableCRF))return null;const m=new(j.get(a)).constructor(l);return m.open({signal:e.signal}).then(()=>m).catch(()=>u())};return u()}static register(e,n,t){j.has(e.toUpperCase())||j.set(e.toUpperCase(),{desc:n,constructor:t})}}let J=class extends Ht(Wt(Vi(Xi(ti(us(Yi(ei(Gt(Zt(jt(Qt))))))))))){constructor(...i){super(...i),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=qt(async(e,n,t)=>{const{save:s,saveAs:r}=await Ge(()=>import("./imageryUtils-CXo1FQru.js"),__vite__mapDeps([5,6,2,3,7,8,9,10,11,12]));switch(e){case Re.SAVE:return s(this,n);case Re.SAVE_AS:return r(this,t,n)}})}normalizeCtorArgs(i,e){return typeof i=="string"?{url:i,...e}:i}load(i){const e=i!=null?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},i).catch(Ut).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var l;const i=[new fe({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new fe({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],{serviceRasterInfo:e}=this,n=e==null?void 0:e.attributeTable,t=n!=null?n.fields:null,s="Raster.";if(t){const o=t.filter(c=>c.type!=="oid"&&c.name.toLowerCase()!=="value").map(c=>{const u=c.clone();return u.name=s+c.name,u});i.push(...o)}const r=e==null?void 0:e.dataType,a=e==null?void 0:e.multidimensionalInfo;if((r==="vector-magdir"||r==="vector-uv")&&a!=null){const o=(l=a.variables[0].unit)==null?void 0:l.trim(),c="Magnitude"+(o?` (${o})`:"");i.push(new fe({name:"Raster.Magnitude",alias:c,domain:null,editable:!1,type:"double"})),i.push(new fe({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return i}createPopupTemplate(i){const{rasterFields:e}=this,n=new Set(e.map(({name:t})=>t).filter(t=>t.toLowerCase()!=="raster.servicepixelvalue.raw"));return Qi({fields:e,title:this.title},{...i,visibleFieldNames:n})}async generateRasterInfo(i,e){if(!(i=We(ze,i)))return this.serviceRasterInfo;try{const{rasterInfo:n}=await this._openFunctionRaster(i,e);return n}catch(n){throw n instanceof O?n:new O("imagery-tile-layer","the given raster function is not supported")}}async save(i){return this._debouncedSaveOperations(Re.SAVE,i)}async saveAs(i,e){return this._debouncedSaveOperations(Re.SAVE_AS,e,i)}write(i,e){const n=this._primaryRasters[0]??this.raster;if(this.loaded?n.datasetFormat==="RasterTileServer"&&(n.tileType==="Raster"||n.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(i,e);if(e!=null&&e.messages){const t=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new O("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t}'`,{layer:this}))}return null}async _openRaster(i){let e=!1;if(this.raster)await this._openFromRaster(this.raster,i),e=this.raster.datasetFormat==="Function";else{const{url:t,rasterFunction:s,source:r}=this;if(!t&&!r)throw new O("imagery-tile-layer:open","missing url or source parameter");r?await this._openFromSource(r,i):s?await this._openFromUrlWithRasterFunction(t,s,i):await this._openFromUrl(t,i)}const n=this.raster.rasterInfo;if(!n)throw new O("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",e?n:this._primaryRasters[0].rasterInfo),this._set("spatialReference",n.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const t=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(t,{origin:"service"})}else this.read({tileInfo:this.serviceRasterInfo.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Vt(()=>this.customParameters,t=>{this.raster&&(this.raster.ioConfig.customFetchParameters=t)}))}async _openFromRaster(i,e){i.rasterInfo||await i.open({signal:e}),this._primaryRasters=i.datasetFormat==="Function"?i.primaryRasters.rasters:[i],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(i,e,n){const t=[i];e&&Ui(e.toJSON(),t);const s=await Promise.all(t.map(a=>Ee.open({url:a,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:n}))),r=s.findIndex(a=>a==null);if(r>-1)throw new O("imagery-tile-layer:open",`cannot open raster: ${t[r]}`);return this._primaryRasters=s,this._initializeWithFunctionRaster(e)}async _openFromUrl(i,e){const n=await Ee.open({url:i,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(n==null)throw new O("imagery-tile-layer:open",`cannot open raster: ${i}`);this._primaryRasters=[n],this.raster=n}async _openFromSource(i,e){var r;const n="the tiled imagery data source is not supported",t=((r=i.type)==null?void 0:r.toLowerCase())==="coverage"?"CovJSON":i.extent&&i.pixelBlock?"MEMORY":null;if(!t)throw new O("imagery-tile-layer:open",n);t==="MEMORY"&&(i={extent:i.extent,pixelBlocks:[i.pixelBlock]});const s=await Ee.open({url:"",source:i,datasetFormat:t,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(s==null)throw new O("imagery-tile-layer:open",n);this._primaryRasters=[s],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=s}async _openFunctionRaster(i,e){var r;const n={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(a=>n[a.url]=a);const t=bt(((r=i.functionDefinition)==null?void 0:r.toJSON())??i.toJSON(),n),s=new Rt({rasterFunction:t});return await s.open(e),s}async _initializeWithFunctionRaster(i,e){try{this.raster=await this._openFunctionRaster(i,e)}catch(n){n instanceof O&&ce.getLogger(this).error("imagery-tile-layer:open",n.message),ce.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};I([v({clonable:!1})],J.prototype,"_primaryRasters",void 0),I([v({type:[Xt],json:{write:{overridePolicy(){var i;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((i=this.bandIds)==null?void 0:i.join(","))!=="0,1,2"}}}}})],J.prototype,"bandIds",void 0),I([v({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Yt(yi)],J.prototype,"interpolation",void 0),I([v(gi)],J.prototype,"legendEnabled",void 0),I([v({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],J.prototype,"isReference",void 0),I([v({type:["show","hide"]})],J.prototype,"listMode",void 0),I([v({json:{read:!0,write:!0}})],J.prototype,"blendMode",void 0),I([v()],J.prototype,"sourceJSON",void 0),I([v({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],J.prototype,"version",void 0),I([v({readOnly:!0,json:{read:!1}})],J.prototype,"type",void 0),I([v({type:["ArcGISTiledImageServiceLayer"]})],J.prototype,"operationalLayerType",void 0),I([v({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(i,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(i,e,n){e[n]=!i}}}})],J.prototype,"popupEnabled",void 0),I([v({type:Kt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],J.prototype,"popupTemplate",void 0),I([v({readOnly:!0})],J.prototype,"defaultPopupTemplate",null),I([v({readOnly:!0,type:[fe]})],J.prototype,"fields",void 0),I([v({readOnly:!0,type:[fe]})],J.prototype,"rasterFields",null),I([v({constructOnly:!0})],J.prototype,"source",void 0),J=I([K("esri.layers.ImageryTileLayer")],J);const Qs=J;export{Qs as default};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/geometryEngine-DM06toa8.js","assets/geometryEngineBase-DlPZ98f0.js","assets/index-Bv0Hohk0.js","assets/index-85K7yr-5.css","assets/hydrated-k8s1tmfD.js","assets/imageryUtils-CXo1FQru.js","assets/utils-CbP86UUX.js","assets/originUtils-D69mHv66.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/jsonContext-_jbLKix2.js","assets/portalItemUtils-JWUEQXnE.js","assets/saveAPIKeyUtils-BtwYHPDB.js","assets/saveUtils-QPZnc6es.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
