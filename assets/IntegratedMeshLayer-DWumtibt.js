import{eD as w,V as T,dl as _,U as I,e as o,y as s,c as u,eG as O,R as L,B as $,hK as x,d as M,a as l,f4 as c,f5 as N,q as h,f6 as A,i as b,l as j}from"./index-Bv0Hohk0.js";import{m as P}from"./MultiOriginJSONSupport-BZQTWpeF.js";import{j as D}from"./persistable-CqahfBmp.js";import{i as U}from"./APIKeyMixin-0dcGhBjP.js";import{l as V}from"./ArcGISService-uQPwYVuT.js";import{e as J}from"./CustomParametersMixin-DKqLR8tC.js";import{u as K}from"./OperationalLayer-CgleBBYh.js";import{j as E}from"./PortalLayer-DaNsTDLt.js";import{L as R,P as f}from"./SceneService-BtSnxDkz.js";import{f as z}from"./commonProperties-71l2LJ6s.js";import{s as C,l as q,u as B,m as F}from"./I3SLayerDefinitions-mJYKJt0E.js";import{f as d}from"./SceneModification-CqCsboWN.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-DX05oFmI.js";import"./portalItemUtils-JWUEQXnE.js";import"./originUtils-D69mHv66.js";import"./I3SIndexInfo-C9hHhxPX.js";import"./jsonContext-_jbLKix2.js";import"./resourceUtils-SWypRT5P.js";import"./resourceUtils-yTEArpxg.js";import"./saveAPIKeyUtils-BtwYHPDB.js";import"./saveUtils-QPZnc6es.js";var a;let n=a=class extends w(T.ofType(d)){constructor(e){super(e),this.url=null}clone(){return new a({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const r=new a;for(const p of e)r.add(d.fromJSON(p,t));return r}static async fromUrl(e,t,r){const p={url:_(e),origin:"service"},g=await I(e,{responseType:"json",signal:r==null?void 0:r.signal}),S=t.toJSON(),y=[];for(const m of g.data)y.push(d.fromJSON({...m,geometry:{...m.geometry,spatialReference:S}},p));return new a({url:e,items:y})}};o([s({type:String})],n.prototype,"url",void 0),n=a=o([u("esri.layers.support.SceneModifications")],n);const v=n;let i=class extends R(V(K(E(O(P(J(U(j)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null}initialize(){this.addHandles(L(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,$))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readModifications(e,t,r){this._modificationsSource={url:x(e,r),context:r}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(r){M(r)}if(await this._fetchService(t),this._modificationsSource!=null){const r=await v.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(f.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(f.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new l("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new l("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";c(h.getLogger(this),N(t,"absolute-height",e)),c(h.getLogger(this),A(t,e))}};o([s({type:String,readOnly:!0})],i.prototype,"geometryType",void 0),o([s({type:["show","hide"]})],i.prototype,"listMode",void 0),o([s({type:["IntegratedMeshLayer"]})],i.prototype,"operationalLayerType",void 0),o([s({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),o([s({type:C,readOnly:!0})],i.prototype,"nodePages",void 0),o([s({type:[q],readOnly:!0})],i.prototype,"materialDefinitions",void 0),o([s({type:[B],readOnly:!0})],i.prototype,"textureSetDefinitions",void 0),o([s({type:[F],readOnly:!0})],i.prototype,"geometryDefinitions",void 0),o([s({readOnly:!0})],i.prototype,"serviceUpdateTimeStamp",void 0),o([s({type:v}),D({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],i.prototype,"modifications",void 0),o([b(["web-scene","portal-item"],"modifications")],i.prototype,"readModifications",null),o([s(z)],i.prototype,"elevationInfo",null),o([s({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),i=o([u("esri.layers.IntegratedMeshLayer")],i);const fe=i;export{fe as default};
