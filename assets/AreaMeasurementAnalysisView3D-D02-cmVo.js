import{e$ as U,eZ as q,d0 as X,eY as F,d3 as J,d5 as u,j as Ne,af as te,d4 as Te,lK as K,ma as He,tK as Be,nx as G,tL as k,hc as Ee,tM as ae,r2 as re,d2 as je,gs as Ze,oC as Ke,aF as Xe,hd as Je,gl as le,H as We,tN as Ye,lZ as me,tO as he,r5 as Qe,tP as _e,oZ as et,gT as fe,rt as tt,gf as st,oN as it,qx as ye,o3 as ve,tQ as rt,gI as nt,k2 as ot,e as a,y as d,c as se,S as pe,A as T,B as Le,q$ as at,r0 as lt,c1 as ht,cJ as we,gq as dt,J as de,k1 as ct,q as ut,ba as pt,sK as gt,sL as mt,a0 as Y,sN as Ce,sP as _t,tt as ft,tR as Se,sT as yt,sU as N,sV as vt,_ as Lt,tS as wt,qt as H,sY as Ct,sZ as St,tz as Pt,s_ as $t,s$ as Mt,t1 as bt,t2 as At,t3 as Vt,t4 as Gt,sX as R,t9 as xt,ta as Dt,ir as ne,tb as oe,tg as Rt,te as zt,tT as Ot,tj as It,l_ as Ue,cb as Q,k7 as z,oP as Tt,re as Pe,ke as $e,j3 as Et,$ as jt,a1 as Me,tU as Wt,mq as be,mp as Ae,tV as Ut,r9 as Ve,fj as kt,rM as qt,rT as Ft,P as Nt,u as $,tW as Ht,fK as Bt,k8 as Zt,tX as Kt,tY as Xt,fO as Jt,fM as Yt,rU as Qt}from"./index-Bv0Hohk0.js";import{e as ce,t as es,a as ts}from"./UnitNormalizer-Bx_h0ZpG.js";import{a as ss,b as is,f as j,s as rs}from"./LineVisualElement-BA2FWRBH.js";import{i as W,b as Ge,c as ns}from"./unitFormatUtils-CrXkRIq7.js";import{geodesicArea as os}from"./geometryEngine-DM06toa8.js";import{j as ke,z as qe,f as xe,_ as as,h as De,m as ls}from"./Segment-CNSGf7Bh.js";import{V as Re,p as hs,P as ds,l as cs}from"./EditGeometryOperations-DfElYoDB.js";import"./geometryEngineBase-DlPZ98f0.js";import"./hydrated-k8s1tmfD.js";function ze(t,e,s,i,r){U(B,t),q(Z,t,e),X(B,s,B,r),X(Z,s,Z,r),F(i,Z,B),J(i,i)}const B=u(),Z=u();function us(t,e){const s=Ze(e);Te(s,0,0,0);for(let r=0;r<t.length;++r)q(s,s,t[r]);K(s,s,1/t.length);let i=0;for(let r=0;r<t.length;++r)i=Math.max(i,He(s,t[r]));e[3]=Math.sqrt(i)}function ps(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");Be(t[0],t[1],t[2],e)}function gs(t,e){return G(t,e)+t[3]}function ms(t,e,s){return k(t,x,s)&&k(e,D,s)?Ee(x,D):0}function _s(t,e){if(!ae(t,x)||!ae(e,D))return 0;const s=new qe;return ke(s,[x[0],x[1]],[D[0],D[1]],te.WGS84),s.distance}function fs(t,e,s){const i=new qe;return ke(i,[t[0],t[1]],[e[0],e[1]],s??te.WGS84),i.distance}function ys(t,e,s,i){const r=Ls;return re(t,i,x)&&re(e,i,D)&&re(s,i,ue)?(r.setPoint(0,0,x),r.setPoint(0,1,D),r.setPoint(0,2,ue),Math.abs(os(r,"square-meters"))):0}function vs(t,e=null,s=!0){const r=(n,o)=>{if(o[0]===0&&o[1]===0&&o[2]===0)return!1;for(let l=0;l<n.length;++l)if(G(o,n[l])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return e&&U(e,t[0]),!0;Te(w,0,0,0);for(let n=0;n<t.length;++n)q(w,w,t[n]);if(J(w,w),r(t,w))return e&&U(e,w),!0;if(!s)return!1;for(let n=0;n<t.length;++n)for(let o=0;o<t.length;++o)if(n!==o&&(je(w,t[n],t[o]),J(w,w),r(t,w)))return e&&U(e,w),!0;return!1}const x=u(),D=u(),ue=u(),Ls=new Ne({rings:[[x,D,ue]],spatialReference:te.WGS84}),w=u();function Oe(t){return Ke(ws(t),[],2)}function ws(t){const e=new Float64Array(2*t.length);for(let s=0;s<t.length;++s){const i=t[s],r=2*s;e[r]=i[0],e[r+1]=i[1]}return e}class Cs{get numVertices(){return this._length}get hasStagedVertex(){return this._hasCursorPoint}constructor(e,s){this.validMeasurement=!1,this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=u(),this.areaCentroidRenderCoords=u(),this.geodesicAreaCentroidRenderCoords=u(),this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=u(),this._planeWorldCoords=Xe(),this._worldUp=u(),this._worldTangent=u(),this._frame=[u(),u(),u()],this._pathVersion=-1,this._hasCursorPoint=!1,this._mode=null,this._tempU=u(),this._tempV=u(),this._tempVec3=u(),this._tempSphere=Je(),this._sceneView=e,this.unitNormalizer=s}update(e,s,i,r,n,o){const l=s!=null,h=this._pathVersion===e.version,p=this._hasCursorPoint===l,c=this._mode===n;return!(h&&!o&&p&&c&&e.isValidPolygon)&&(this._pathVersion=e.version,this._hasCursorPoint=l,this._updateCursorSegmentLength(e,s),this._update(e,s,i,r,n),!0)}_update(e,s,i,r,n){const o=this.unitNormalizer,l=this._sceneView.renderSpatialReference,h=this.unitNormalizer.spatialReference;let p=e.numVertices;const c=!(s==null||s.equals(e.lastPoint)||p>2&&s.equals(e.firstPoint));c&&(p+=1);const g=!e.polygonIsClosed&&p>2,m=e.polygonIsClosed||g;this._resize(p);const f=le(i.spatialReference),M=We(i.spatialReference,f)&&Ye(i.spatialReference),{positionsGeographic:C,positionsWorldCoords:A,positionsRenderCoords:b,positionsSpherical:O}=this,E=(y,v)=>{Ss(i.elevationProvider,y),k(y,A[v],h),k(y,b[v],l),M&&(ae(y,C[v]),k(y,O[v],f),J(O[v],O[v]))};e.forEachVertexPosition((y,v)=>E(y,v)),c&&E(s,p-1);const P=this._updatePathLengths(m);if(this.pathLength=this._length>1?W(o.normalizeDistance(P),"meters"):null,M){const y=this._updateGeodesicPathLengths(m,h);this.geodesicPathLength=this._length>1?W(y,"meters"):null}else this.geodesicPathLength=null;if(this._updateMode(n),!m)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),void(this.validMeasurement=!1);this._updateAreaAndPerimeterLength(i,o,l,h,r),M&&this._updateGeodesicArea(i),this.validMeasurement=!0}getData(){return{validMeasurement:this.validMeasurement,numVertices:this.numVertices,hasStagedVertex:this.hasStagedVertex,positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(u()),this.positionsRenderCoords.push(u()),this.positionsProjectedWorldCoords.push(me()),this.positionsFittedRenderCoords.push(u()),this.positionsGeographic.push(u()),this.positionsSpherical.push(u()),this.positionsStereographic.push(me()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorldCoords,i=this.pathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const o=i[n]=Ee(s[n],s[(n+1)%this._length]);(n<this._length-1||e)&&(r+=o)}return r}_updateGeodesicPathLengths(e,s){const i=this.positionsGeographic,r=this.geodesicPathSegmentLengths;let n=0;for(let o=0;o<this._length;++o){const l=r[o]=fs(i[o],i[(o+1)%this._length],s??void 0);(o<this._length-1||e)&&(n+=l)}return n}_updateAreaAndPerimeterLength(e,s,i,r,n){const o=e.renderCoordsHelper,l=this.positionsWorldCoords,h=this.positionsRenderCoords,p=this.positionsProjectedWorldCoords,c=this.positionsFittedRenderCoords,g=this._planeWorldCoords,m=this._centroidRenderCoords;he(h,m),o.worldUpAtPosition(m,this._worldUp),o.worldBasisAtPosition(m,Qe.X,this._worldTangent),ze(m,this._worldUp,i,this._worldUp,r),ze(m,this._worldTangent,i,this._worldTangent,r),l.length>2&&ps(l,g),this.fittingMode=this._selectFittingMode(g,l,this._worldUp,n);let f=0;if(this.fittingMode==="horizontal"){let P=-1/0;h.forEach((y,v)=>{const ge=o.getAltitude(h[v]);ge>P&&(P=ge,f=v)})}const M=l[f];let C=g,A=this._worldTangent;this.fittingMode==="horizontal"?C=this._worldUp:this.fittingMode==="vertical"&&(C=this._tempVec3,A=this._worldUp,_e(g,this._worldUp,C)),U(this._frame[2],C),_e(A,C,this._frame[0]),je(this._frame[1],this._frame[0],this._frame[2]),et(this._frame[1],this._frame[1]);const b=this._tempVec3,O=this._tempU,E=this._tempV;for(let P=0;P<this._length;++P){const y=p[P],v=c[P];F(b,l[P],M),fe(y,G(this._frame[0],b),G(this._frame[1],b)),K(O,this._frame[0],y[0]),K(E,this._frame[1],y[1]),q(b,O,E),q(b,b,M),X(b,r,v,i)}this.perimeterLength=this._length>0?W(s.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,he(c,this.areaCentroidRenderCoords),X(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,r),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?Ge(s.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:s,spatialReference:i}=e,{positionsSpherical:r,positionsStereographic:n}=this,o=this._tempVec3,l=vs(r,o);if(!l)return void(this.geodesicArea=null);const h=this._tempU,p=this._tempV;tt(o,h,p);for(let c=0;c<this._length;++c){const g=G(r[c],h),m=G(r[c],p),f=G(r[c],o);fe(n[c],g/f,m/f)}K(o,o,st(i).radius),s.toRenderCoords(o,le(i),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=l&&this.geodesicIntersectingSegments.size===0?Ge(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,s=this.perimeterSegmentLengths;let i=0;for(let r=0;r<this._length;++r)i+=s[r]=it(e[r],e[(r+1)%this._length]);return i}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,s=this.intersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],l=e[r],h=e[(r+1)%this._length];ye(n,o,l,h)&&(s.add(i),s.add(r))}}_computeArea(){const e=this.positionsProjectedWorldCoords,s=this.triangleIndices=ve(Oe(e));let i=0;for(let r=0;r<s.length;r+=3)i+=rt(e[s[r]],e[s[r+1]],e[s[r+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],l=e[r],h=e[(r+1)%this._length];ye(n,o,l,h)&&(s.add(i),s.add(r))}}_computeGeodesicArea(){const e=this.positionsGeographic,s=this.positionsStereographic,i=this.geodesicTriangleIndices=ve(Oe(s));let r=0;for(let n=0;n<i.length;n+=3)r+=ys(e[i[n]],e[i[n+1]],e[i[n+2]],te.WGS84);return r}_selectFittingMode(e,s,i,r){const n=s.map(c=>Math.abs(gs(e,c))).reduce((c,g)=>Math.max(c,g),0);us(s,this._tempSphere);const o=n/(2*this._tempSphere[3]),l=o<r.maxRelativeErrorCoplanar,h=o<r.maxRelativeErrorAlmostCoplanar;let p="horizontal";return l?p="oblique":h&&(p=Math.abs(G(i,e))>Math.cos(nt(r.verticalAngleThreshold))?"horizontal":"vertical"),p}_updateCursorSegmentLength(e,s){const i=e.lastPoint;e.isValidPolygon||i==null||s==null?(this.geodesicStagedSegmentLength=null,this.stagedSegmentLength=null):(this.geodesicStagedSegmentLength=W(_s(i,s),"meters"),this.stagedSegmentLength=W(this.unitNormalizer.normalizeDistance(ms(i,s,this.unitNormalizer.spatialReference)),"meters"))}_updateMode(e){if(e===ce.Auto){this.actualMeasurementMode="euclidean";let s=0;this.geodesicPathLength!=null&&(s+=this.geodesicPathLength.value),s>Ps&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=e===ce.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=e}}function Ss(t,e){e.hasZ||(e.z=ot(t,e,"ground")??0)}const Ps=1e5;let I=class extends pe{constructor(e){super(e)}initialize(){const e=this.view.spatialReference,s=le(e),i=s===at?lt:s,r=!e||We(e,i)?i:e,n=new es(r);this._measurementDataManager=new Cs(this.view,n),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),T(()=>this.analysisViewData.stagedPoint,()=>this._update(),Le),T(()=>this.analysisViewData.mode,()=>this._update(),Le)]),this._update()}_update(e=!1){const{analysisViewData:s,view:i}=this,r={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(s.path,s.stagedPoint,i,r,s.mode,e)&&(s.measurementData=this._measurementDataManager.getData())}};a([d({constructOnly:!0})],I.prototype,"view",void 0),a([d({constructOnly:!0})],I.prototype,"analysis",void 0),a([d({constructOnly:!0})],I.prototype,"analysisViewData",void 0),I=a([se("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],I);let S=class extends ht.EventedAccessor{constructor(e={}){super(e),this._version=0,this._internalGeometryChange=!1,this._extent=we()}set areaMeasurement(e){this._set("areaMeasurement",e),e!=null&&this.view!=null&&this._initialize(e,this.view)}set view(e){this._set("view",e),e!=null&&this.areaMeasurement!=null&&this._initialize(this.areaMeasurement,e)}get constructed(){return this.areaMeasurement!=null&&this.view!=null}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||this._editGeometry.components.length===0}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const e=we(this._extent);return this.forEachVertex(s=>{dt(e,s.pos)}),e}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(e,s){this.removeAllHandles(),this.addHandles(T(()=>e.geometry,()=>{this._updateEditGeometryFromModelGeometry(e,s)},de)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,s){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let i=e.geometry;if(i!=null){const r=ct(i,s.spatialReference);r==null&&ss(e,i.spatialReference,ut.getLogger(this)),i=r}this._editGeometryOperations=i!=null?Re.fromGeometry(i,s.state.viewingMode):new Re(new hs("polygon",ds(!0,!1,s.spatialReference))),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",r=>{this._makeDirty(r.addedVertices!=null||r.removedVertices!=null),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex(s=>{e.push(s)}),e}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get polygonIsClosed(){return this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get firstPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getFirstVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const s=this._editGeometry.components[0].vertices[0];let i=s;do{if(i.index===e)return i;i=i.rightEdge.rightVertex}while(i!==s&&i!=null);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const s=this._editGeometry.coordinateHelper;this.forEachVertex((i,r)=>{s.vectorToPoint(i.pos,Ie),e(Ie,r)})}clear(){this.areaMeasurement!=null&&(this.areaMeasurement.geometry=null)}add(e){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const i=this.view;this._editGeometry.components.push(new cs(i.spatialReference,i.state.viewingMode))}const s=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const e=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,s=""){let i=!1;if(this._editGeometry.components.forEach(r=>{r.iterateVertices(n=>{n===e&&(i=!0)})}),!i)throw new Error(`vertex doesnt exist ${s}`);return i}setVertexPosition(e,s){if(!this.constructed)return null;const i=this._editGeometryOperations.setVertexPosition(e,this._editGeometry.coordinateHelper.pointToVector(s));return this.emit("change"),i}equals(e){if(this.numVertices!==e.numVertices)return!1;let s=!0;return this.forEachVertexPosition((i,r)=>{const n=e.getVertexPositionAsPointFromIndex(r);i.equals(n)||(s=!1)}),!!s}};a([d({value:null})],S.prototype,"areaMeasurement",null),a([d({value:null})],S.prototype,"view",null),a([d()],S.prototype,"isEmptyPolygon",null),a([d()],S.prototype,"isValidPolygon",null),a([d()],S.prototype,"extent",null),a([d()],S.prototype,"spatialReference",null),a([d()],S.prototype,"numVertices",null),a([d()],S.prototype,"polygonIsClosed",null),S=a([se("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper")],S);const Ie=new pt;function Fe(t){const e=new gt,{vertex:s,fragment:i}=e;return mt(s,t),e.attributes.add(Y.POSITION,"vec3"),e.attributes.add(Y.UV0,"vec2"),e.varyings.add("vUV","vec2"),t.multipassEnabled&&e.varyings.add("depth","float"),s.code.add(Ce`
    void main(void) {
      vUV = uv0;
      ${t.multipassEnabled?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.include(_t,t),i.uniforms.add(new ft("size",r=>r.size)),i.uniforms.add(new Se("color1",r=>r.color1)),i.uniforms.add(new Se("color2",r=>r.color2)),i.include(yt),i.code.add(Ce`
    void main() {
      ${t.multipassEnabled?"terrainDepthTest(depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      fragColor = mix(color2, color1, t);
      ${t.transparencyPassType===N.Color?"fragColor = premultiplyAlpha(fragColor);":""}
    }
  `),e}const $s=Object.freeze(Object.defineProperty({__proto__:null,build:Fe},Symbol.toStringTag,{value:"Module"}));class ie extends Ct{initializeProgram(e){return new St(e.rctx,ie.shader.get().build(this.configuration),Pt)}_setPipelineState(e){const s=this.configuration,i=e===N.NONE,r=e===N.FrontFace;return $t({blending:s.transparent?i?bs:Mt(e):null,depthTest:{func:bt(e)},depthWrite:i?s.writeDepth?At:null:Vt(e),colorWrite:Gt,polygonOffset:i||r?s.polygonOffset?Ms:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}ie.shader=new vt($s,()=>Lt(()=>Promise.resolve().then(()=>zs),void 0));const Ms={factor:0,units:-25},bs=wt(H.SRC_ALPHA,H.ONE,H.ONE_MINUS_SRC_ALPHA,H.ONE_MINUS_SRC_ALPHA);class V extends xt{constructor(){super(...arguments),this.transparencyPassType=N.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.multipassEnabled=!1,this.cullAboveGround=!1}}a([R({count:N.COUNT})],V.prototype,"transparencyPassType",void 0),a([R()],V.prototype,"transparent",void 0),a([R()],V.prototype,"writeDepth",void 0),a([R()],V.prototype,"polygonOffset",void 0),a([R()],V.prototype,"multipassEnabled",void 0),a([R()],V.prototype,"cullAboveGround",void 0),a([R({constValue:!1})],V.prototype,"occlusionPass",void 0);class As extends Dt{constructor(e){super(e,new Gs),this.produces=new Map([[ne.OPAQUE_MATERIAL,s=>oe(s)&&!this.parameters.transparent],[ne.TRANSPARENT_MATERIAL,s=>oe(s)&&this.parameters.transparent&&this.parameters.writeDepth],[ne.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,s=>oe(s)&&this.parameters.transparent&&!this.parameters.writeDepth]]),this._configuration=new V}getConfiguration(e,s){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=s.transparencyPassType,this._configuration.multipassEnabled=s.multipassEnabled,this._configuration.cullAboveGround=s.multipassTerrain.cullAboveGround,this._configuration}createGLMaterial(e){return new Vs(e)}createBufferWriter(){return new Rt(zt)}}class Vs extends Ot{beginSlot(e){return this.ensureTechnique(ie,e)}}let Gs=class extends It{constructor(){super(...arguments),this.size=Ue(1,1),this.color1=Q(.75,.75,.75,1),this.color2=Q(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}};class xs extends is{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=z.OccludeAndTransparent,this._geometry=null,this._size=Ue(1,1),this._color1=Q(1,.5,0,.5),this._color2=Q(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){Tt(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){Pe(e,this._color1)||($e(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){Pe(e,this._color2)||($e(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial!=null&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new As({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:z.OccludeAndTransparent,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){this._checkerBoardMaterial!=null&&e(this._checkerBoardMaterial)}createGeometries(e){if(this._geometry==null||this._checkerBoardMaterial==null)return;const s=Ds;Et(s,this.transform);const i=this._geometry,r=[],n=u();i.position.forEach(h=>{F(n,h,s),r.push(n[0],n[1],n[2])});const o=[];i.uv.forEach(h=>{o.push(h[0],h[1])});const l=new jt(this._checkerBoardMaterial,[[Y.POSITION,new Me(r,i.triangleIndices,3,!0)],[Y.UV0,new Me(o,i.triangleIndices,2,!0)]]);e.addGeometry(l)}}const Ds=u();let L=class extends pe{get _parameters(){const{accentColor:t,textColor:e}=this.view.effectiveTheme,s=Wt(t),i=be(t,.5),r=be(Ae(t),.5),n=Ae(e,Ut.Low);return{accentColor:s,transparentAccentColor:i,transparentContrastColor:r,intersectingLineColor:[1,.2,0,1],textColor:e,textBackgroundColor:Ve(n,.6),textCalloutColor:Ve(n,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(t){super(t),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=u(),this._originTransform=kt(),this.messages=null,this.viewData=Rs,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_parameters:e,view:s}=this;this._path=new j({view:s,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:z.OccludeAndTransparent,isDecoration:!0}),this._intersectedPath=new j({view:s,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:z.OccludeAndTransparent,isDecoration:!0}),this._perimeter=new j({view:s,attached:!0,width:e.perimeterLineWidth,polygonOffset:!0,renderOccluded:z.OccludeAndTransparent,isDecoration:!0}),this._intersectedPerimeter=new j({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:z.OccludeAndTransparent,isDecoration:!0}),this._projectionLines=new j({view:s,attached:!0,width:e.projectionLineWidth,stipplePattern:qt(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:z.OccludeAndTransparent,isDecoration:!0}),this._measurementArea=new xs({view:s,attached:!0,isDecoration:!0});const i={attached:!0,view:s,isDecoration:!0};this._areaLabel=new xe({...i,fontSize:ee.Large}),this._perimeterLengthLabel=new xe({...i,fontSize:ee.Small}),this.addHandles([T(()=>[t.mode,this.visible,t.unit,t.measurementData,t.stagedPoint],()=>this._update(),de),T(()=>{var r;return(r=s.state)==null?void 0:r.camera},()=>this._updateLabels(),de),Ft(()=>this._updateMessageBundle()),T(()=>this._parameters,({accentColor:r,transparentAccentColor:n,transparentContrastColor:o,textColor:l,textBackgroundColor:h,textCalloutColor:p})=>{const{_path:c,_intersectedPath:g,_perimeter:m,_projectionLines:f,_measurementArea:M,_areaLabel:C,_perimeterLengthLabel:A}=this;c.color=r,g.color=r,m.color=r,f.color=r,M.color1=n,M.color2=o,C.textColor=l,C.backgroundColor=h,C.calloutColor=p,A.textColor=l,A.backgroundColor=h,A.calloutColor=p},Nt)]),this._updateMessageBundle()}destroy(){this._measurementArea=$(this._measurementArea),this._path=$(this._path),this._intersectedPath=$(this._intersectedPath),this._perimeter=$(this._perimeter),this._intersectedPerimeter=$(this._intersectedPerimeter),this._areaLabel=$(this._areaLabel),this._perimeterLengthLabel=$(this._perimeterLengthLabel),this._projectionLines=$(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;t!=null&&(this._updateViewData(t,e.path,e.stagedPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e,s){const i=t.validMeasurement,r=t.actualMeasurementMode==="geodesic",n=r?t.geodesicArea:t.area;let o=1;if(n){const h=this._toPreferredAreaUnit(n,this.analysisViewData.unit);o=Ht(Math.sqrt(h.value)/Math.sqrt(300)),o*=Math.sqrt(Bt(1,h.unit,"square-meters")),o/=t.unitNormalizer.normalizeDistance(1)}const l={validMeasurement:i,numVertices:t.numVertices,hasStagedVertex:t.hasStagedVertex,path:e,pathVersion:e.version,stagedPoint:s,measurementData:t,mode:t.actualMeasurementMode,positionsGeographic:t.positionsGeographic,positionsRenderCoords:t.positionsRenderCoords,positionsProjected:t.positionsProjectedWorldCoords,positionsFittedRenderCoords:t.positionsFittedRenderCoords,intersectingSegments:r?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:r?t.geodesicTriangleIndices:t.triangleIndices,fittingMode:t.fittingMode,areaCentroid:r?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:i?0:e.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:o};this._set("viewData",l)}_updateOrigin(){const t=this.viewData;he(t.positionsRenderCoords,this._origin),Zt(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=this.view.renderCoordsHelper.spatialReference,i=e.mode,r=[],n=[],o=[],l=e.numVertices,h=e.validMeasurement?l:l-1;for(let c=0;c<h;++c){const g=e[t][c],m=e[t][(c+1)%l];let f=null;switch(i){case"euclidean":f=new ls(g,m);break;case"geodesic":f=new as(g,m,s)}e.intersectingSegments.has(c)?o.push(f):n.push(f),r.push(f)}let p=null;return e.validMeasurement&&e.hasStagedVertex&&h>=2?p=r[r.length-2]:e.hasStagedVertex&&h>=1&&(p=r[r.length-1]),{all:r,nonIntersecting:n,intersecting:o,stagedSegment:p}}_updatePathSegments(){const{visible:t}=this,e=this._createSegments("positionsRenderCoords");this._path.setGeometryFromSegments(e.nonIntersecting,this._origin),this._path.visible=t,this._intersectedPath.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPath.visible=t,this._pathSegments=e.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsProjected,position:t.positionsFittedRenderCoords,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.mode,i=t.numVertices;if(i>0&&t.validMeasurement&&s==="euclidean"){const r=[];for(let n=0;n<i;++n){const o=u();F(o,t.positionsRenderCoords[n],this._origin);const l=u();F(l,t.positionsFittedRenderCoords[n],this._origin),r.push([o,l])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{measurementData:e,mode:s,path:i}=t;if(!i)return;const r=this.visible,n=this._formatAreaLabel(this.messages,s==="geodesic"?e.geodesicArea:e.area,this.analysisViewData.unit);if(n!=null?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=n,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&r):this._areaLabel.visible=!1,this._set("areaLabel",n),t.validMeasurement&&t.intersectingSegments.size===0){const o=t.mode==="geodesic",l=o?e.geodesicPathLength:e.validMeasurement?e.perimeterLength:e.pathLength,h=this._formatLengthLabel(this.messages,l,this.analysisViewData.unit);this._set("perimeterLengthLabel",h),this._perimeterLengthLabel.distance=this._parameters.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=h,this._perimeterLengthLabel.visible=!0;let p=!0;for(let c=0;c<t.numVertices;++c){const g=(t.perimeterLengthLabelSegmentIndex+c)%t.numVertices,m=o||!e.validMeasurement?this._pathSegments[g]:this._perimeterSegments[g];if(p=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:m,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;p=!1}this._perimeterLengthLabel.visible=p&&r}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(t,e){return ns(t,this._preferredAreaUnit(t,e))}_preferredAreaUnit(t,e){switch(e){case"metric":return Xt(t.value,t.unit);case"imperial":return Kt(t.value,t.unit);default:return e}}_preferredLengthUnit(t,e){const s=this._deriveLengthUnitFromAreaUnit(e);switch(s){case"metric":return Yt(t.value,t.unit);case"imperial":return Jt(t.value,t.unit);default:return s}}_deriveLengthUnitFromAreaUnit(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(t,e,s){return t&&e&&De(t,e,this._preferredAreaUnit(e,s))}_formatLengthLabel(t,e,s){return t&&e&&De(t,e,this._preferredLengthUnit(e,s))}_updateMessageBundle(){this.loadingMessages=!0,Qt("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var ee;a([d()],L.prototype,"_parameters",null),a([d()],L.prototype,"view",void 0),a([d()],L.prototype,"messages",void 0),a([d()],L.prototype,"analysis",void 0),a([d()],L.prototype,"viewData",void 0),a([d()],L.prototype,"analysisViewData",void 0),a([d({readOnly:!0})],L.prototype,"areaLabel",void 0),a([d({readOnly:!0})],L.prototype,"perimeterLengthLabel",void 0),a([d()],L.prototype,"loadingMessages",void 0),a([d()],L.prototype,"visible",null),L=a([se("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],L),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(ee||(ee={}));const Rs={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,pathVersion:-1,stagedPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null};let _=class extends rs(pe){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.stagedPoint=null,this.mode=ce.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new S({view:e,areaMeasurement:t}),this.analysisVisualization=new L({view:e,analysis:t,analysisViewData:this}),this.analysisController=new I({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=$(this.analysisController),this.analysisVisualization=$(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;return t==null?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};a([d({readOnly:!0})],_.prototype,"type",void 0),a([d({constructOnly:!0,nonNullable:!0})],_.prototype,"analysis",void 0),a([d()],_.prototype,"updating",null),a([d()],_.prototype,"analysisVisualization",void 0),a([d()],_.prototype,"analysisController",void 0),a([d()],_.prototype,"result",null),a([d()],_.prototype,"measurementData",void 0),a([d()],_.prototype,"viewData",null),a([d()],_.prototype,"validMeasurement",null),a([d()],_.prototype,"path",void 0),a([d()],_.prototype,"lastDraggedVertex",void 0),a([d()],_.prototype,"stagedPoint",void 0),a([d()],_.prototype,"mode",void 0),a([d()],_.prototype,"unit",null),a([d(ts)],_.prototype,"_defaultUnit",void 0),_=a([se("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],_);const Bs=_,zs=Object.freeze(Object.defineProperty({__proto__:null,build:Fe},Symbol.toStringTag,{value:"Module"}));export{Bs as default};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
