import{hb as f,hc as g,eZ as m,hd as x,gs as _,e as E,c as v,he as b,hf as y,d5 as h,g as L,dF as V,hg as j,hh as P,hi as C,hj as u}from"./index-Bv0Hohk0.js";const S=1e3;function I(t,e,s){const n=x(),i=_(n);return f(i,i,t,.5),f(i,i,e,.5),n[3]=g(i,t),m(i,i,s),n}let l=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=y(),this._tmpP1=h(),this._tmpP2=h(),this._tmpP3=h(),this.remoteClient=null}async fetchCandidates(t,e){await Promise.resolve(),L(e),await this._ensureEdgeLocations(t,e);const s=[];return this._edges.forEachNeighbor(n=>(this._addCandidates(t,n,s),s.length<S),t.bounds),{result:{candidates:s}}}async _ensureEdgeLocations(t,e){const s=[];if(this._components.forEachNeighbor(o=>{if(o.info==null){const{id:c,uid:d}=o;s.push({id:c,uid:d})}return!0},t.bounds),!s.length)return;const n={components:s},i=await this.remoteClient.invoke("fetchAllEdgeLocations",n,e??{});for(const o of i.components)this._setFetchEdgeLocations(o)}async add(t){const e=new p(t.id,t.bounds);return this._idToComponent.set(e.id,e),this._components.add([e]),{result:{}}}async remove(t){const e=this._idToComponent.get(t.id);if(e){const s=[];this._edges.forEachNeighbor(n=>(n.component===e&&s.push(n),!0),e.bounds),this._edges.remove(s),this._components.remove([e]),this._idToComponent.delete(e.id)}return{result:{}}}_setFetchEdgeLocations(t){const e=this._idToComponent.get(t.id);if(e==null||t.uid!==e.uid)return;const s=V.createView(t.locations),n=new Array(s.count),i=h(),o=h();for(let a=0;a<s.count;a++){s.position0.getVec(a,i),s.position1.getVec(a,o);const r=I(i,o,t.origin),w=new T(e,a,r);n[a]=w}this._edges.add(n);const{objectIds:c,origin:d}=t;e.info={locations:s,objectIds:c,origin:d}}_addCandidates(t,e,s){const{info:n}=e.component,{origin:i,objectIds:o}=n,c=n.locations,d=c.position0.getVec(e.index,this._tmpP1),a=c.position1.getVec(e.index,this._tmpP2);m(d,d,i),m(a,a,i);const r=o[c.componentIndex.get(e.index)];this._addEdgeCandidate(t,r,d,a,s),this._addVertexCandidate(t,r,d,s),this._addVertexCandidate(t,r,a,s)}_addEdgeCandidate(t,e,s,n,i){if(!t.returnEdge)return;const o=_(t.bounds),c=j(s,n,this._tmpLineSegment),d=P(c,o,this._tmpP3);C(t.bounds,d)&&i.push({type:"edge",objectId:e,target:u(d),distance:g(o,d),start:u(s),end:u(n)})}_addVertexCandidate(t,e,s,n){if(!t.returnVertex||!C(t.bounds,s))return;const i=_(t.bounds);n.push({type:"vertex",objectId:e,target:u(s),distance:g(i,s)})}};l=E([v("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],l);const N=l;class p{constructor(e,s){this.id=e,this.bounds=s,this.info=null,this.uid=++p.uid}}p.uid=0;class T{constructor(e,s,n){this.component=e,this.index=s,this.bounds=n}}export{N as default};
